{"version":3,"mappings":"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","names":["CompanyEditButtonComponent","params","label","$event","onClick","Function","event","rowData","node","data","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_4__","CompanyComponent","fb","api","dialog","_angular_material_table__WEBPACK_IMPORTED_MODULE_5__","headerName","width","floatingFilter","cellRenderer","cellRendererParams","editCompany","bind","field","sortable","hide","minWidth","currentUser","getCurrentUser","frameworkComponents","buttonRenderer","_company_edit_button_company_edit_button_component__WEBPACK_IMPORTED_MODULE_2__","form","group","CompanyName","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","CompanyCode","ParentCompanyID","MobileNo","ContactNo","GSTINNo","PANNo","Address1","Address2","Address3","CBCityID","PinCode","ParentCompany","CreatedBy","UserID","BindDropdown","get","subscribe","CompanyList","console","log","error","CitiesList","formData","submitted","invalid","HideSaveButton","SaveData2","CompanyID","Companyname","value","CityId","Pincode","Gstno","Panno","ParentCompanyId","createdby","userId","post","alert","reset","controls","setErrors","tab","record","item","CityID","setValue","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ServiceMasterComponent","header","pinned","type","buttons","icon","tooltip","click","editService","getUserID","txtServiceName","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","txtServiceCode","ServiceTypeID","StorageAreaTypeID","BillingCycleID","IsActive","BindinfDataToList","ServiceList","ServiceTypelist","StorageAreaTypeList","BillingCycleNameIList","dataitem","ServiceID","ServiceCode","ServiceName","HCNCode","TaxID","window","location","reload","AreaTypeID","Billingdata","filter","x","BillingCyclesName","Servicedata","ServiceType","Storagedata","StorageAreaType","length","Number","routes","path","component","_storage_area_storage_area_component__WEBPACK_IMPORTED_MODULE_2__","_company_company_component__WEBPACK_IMPORTED_MODULE_0__","_warehouse_warehouse_component__WEBPACK_IMPORTED_MODULE_3__","_service_master_service_master_component__WEBPACK_IMPORTED_MODULE_1__","SetupRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","SetupModule","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_10__","_setup_routing_module__WEBPACK_IMPORTED_MODULE_1__","ag_grid_angular__WEBPACK_IMPORTED_MODULE_11__","declarations","_company_company_component__WEBPACK_IMPORTED_MODULE_3__","_warehouse_warehouse_component__WEBPACK_IMPORTED_MODULE_4__","_storage_area_storage_area_button_storage_area_button_component__WEBPACK_IMPORTED_MODULE_5__","_company_company_edit_button_company_edit_button_component__WEBPACK_IMPORTED_MODULE_6__","_warehouse_warehouse_edit_button_warehouse_edit_button_component__WEBPACK_IMPORTED_MODULE_7__","_service_master_service_master_component__WEBPACK_IMPORTED_MODULE_8__","StorageAreaButtonComponent","StorageAreaComponent","editstoragearea","_storage_area_button_storage_area_button_component__WEBPACK_IMPORTED_MODULE_2__","Storage_Area_Name","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","StorageAreaCode","Preference","TemperatureCategoryID","MinTempareture","MaxTempareture","AreaLength","AreaHeight","AreaBreadth","StorageCapacity","IsStorable","IsTemparatureControlled","WareHouseID","warehouseId","TempCatList","StorageAreaList","StorageAreaGridList","StorageAreaID","StorageArea","StorageAreaMasterID","StorageName","ParentStorageAreaID","StorageAreaDetails","push","SaveStorageareaData","warehouseID","cls_TD_StorageAreaS","createdBy","BlockID","Table","Message","TempID","TemperatureCategory","a","datavalue","TempCategoryID","TempCategory","MinTemp","MaxTemp","MinMaxList","MinTemperature","MaxTemperature","StorageAreaDetail","WarehouseEditButtonComponent","WarehouseComponent","editWarehouse","_warehouse_edit_button_warehouse_edit_button_component__WEBPACK_IMPORTED_MODULE_2__","WareHouseCode","WareHouseName","TelNumber","Fax","EmailID","Logo","WarehouseList","target","files","reader","FileReader","onload","imagePreview","result","imageData","replace","ImageDT","readAsDataURL","WarehouseID","WarehouseName","WarehouseCode","CompanyData","WareHouseDetail"],"sources":["webpack:///src/app/routes/setup/company/company-edit-button/company-edit-button.component.ts","webpack:///src/app/routes/setup/company/company-edit-button/company-edit-button.component.html","webpack:///src/app/routes/setup/company/company.component.html","webpack:///src/app/routes/setup/company/company.component.ts","webpack:///src/app/routes/setup/service-master/service-master.component.html","webpack:///src/app/routes/setup/service-master/service-master.component.ts","webpack:///src/app/routes/setup/setup-routing.module.ts","webpack:///src/app/routes/setup/setup.module.ts","webpack:///src/app/routes/setup/storage-area/storage-area-button/storage-area-button.component.ts","webpack:///src/app/routes/setup/storage-area/storage-area-button/storage-area-button.component.html","webpack:///src/app/routes/setup/storage-area/storage-area.component.html","webpack:///src/app/routes/setup/storage-area/storage-area.component.ts","webpack:///src/app/routes/setup/warehouse/warehouse-edit-button/warehouse-edit-button.component.ts","webpack:///src/app/routes/setup/warehouse/warehouse-edit-button/warehouse-edit-button.component.html","webpack:///src/app/routes/setup/warehouse/warehouse.component.html","webpack:///src/app/routes/setup/warehouse/warehouse.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-company-edit-button',\r\n  templateUrl: './company-edit-button.component.html',\r\n  styleUrls: ['./company-edit-button.component.scss']\r\n})\r\nexport class CompanyEditButtonComponent implements ICellRendererAngularComp {\r\n\r\n  params: any;\r\n  label: string = '';\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event: any) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n\r\n \r\n\r\n}\r\n","<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick($event)\">Edit</button>","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <mat-card>\r\n            <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n                <mat-tab label=\"Company Master\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Company Name</label>\r\n                                        <input type=\"text\" formControlName=\"CompanyName\" id=\"CompanyName\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.CompanyName.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.CompanyName.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.CompanyName?.errors?.required\">Enter Company Name</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"company\">Company Code</label>\r\n                                        <input type=\"text\" formControlName=\"CompanyCode\" id=\"CompanyCode\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.CompanyCode.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.CompanyCode.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.CompanyCode?.errors?.required\">Enter Company Code</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Company</label>\r\n                                        <select class=\"form-control form-control-sm\" formControlName=\"ParentCompanyID\"\r\n                                            id=\"ParentCompanyID\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option *ngFor=\"let p of CompanyList\" value={{p.ParentCompanyID}}>\r\n                                                {{p.ParentCompany}}</option>\r\n\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Mobile No</label>\r\n                                        <input type=\"text\" formControlName=\"MobileNo\" id=\"MobileNo\"\r\n                                            class=\" form-control form-control-sm\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.MobileNo.invalid}\"\r\n                                            autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.MobileNo.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.MobileNo?.errors?.required\">Enter Mobile No</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Contact No</label>\r\n                                        <input type=\"text\" formControlName=\"ContactNo\" id=\"ContactNo\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>GST NO</label>\r\n                                        <input type=\"text\" formControlName=\"GSTINNo\" id=\"GSTINNo\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.GSTINNo.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.GSTINNo.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.GSTINNo?.errors?.required\">Enter GST NO</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Pan No</label>\r\n                                        <input type=\"text\" formControlName=\"PANNo\" id=\"PANNo\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.PANNo.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.PANNo.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.PANNo?.errors?.required\">Enter Pan No</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Address 1</label>\r\n                                        <input type=\"text\" formControlName=\"Address1\" id=\"Address1\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.Address1.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.Address1.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.Address1?.errors?.required\">Enter Address 1</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Address 2</label>\r\n                                        <input type=\"text\" formControlName=\"Address2\" id=\"Address2\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Address 3</label>\r\n                                        <input type=\"text\" formControlName=\"Address3\" id=\"Address3\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>City</label>\r\n                                        <select class=\"form-control form-control-sm\" formControlName=\"CBCityID\"\r\n                                            id=\"CBCityID\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option *ngFor=\"let p of CitiesList\" value={{p.CityID}}>{{p.City}}</option>\r\n\r\n                                        </select>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>PinCode</label>\r\n                                        <input type=\"text\" formControlName=\"PinCode\" id=\"PinCode\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary btn-sm\" [hidden]=\"!HideSaveButton\"\r\n                                            [value]=\"submitted\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important;margin-left: 20px !important;\">\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"reset\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm()\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important \">\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n                </mat-tab>\r\n                <mat-tab label=\"List\">\r\n\r\n                   \r\n                       \r\n                   \r\n                    <!-- <mtx-grid style=\"height: 300px\" [data]=\"CompanyList\" [columns]=\"CompanylistColumn\" [loading]=\"false\"\r\n                        [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                        [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\" [showToolbar]=\"false\"\r\n                        [toolbarTitle]=\"'Item List'\" [columnHideable]=\"false\" [columnMovable]=\"true\"\r\n                        [expandable]=\"false\" [pageOnFront]=\"false\" [showPaginator]=\"false\" [pageSize]=\"100\"></mtx-grid> -->\r\n\r\n                        <div style=\"height: 100%; box-sizing: border-box;\">\r\n                            <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"CompanyList\"\r\n                                [columnDefs]=\"CompanylistColumn\" [frameworkComponents]=\"frameworkComponents\">\r\n                            </ag-grid-angular>\r\n                        </div>\r\n                   \r\n                    <!-- <ng-template #expansionTpl let-row>\r\n                      {{row.name}}\r\n                    </ng-template> -->\r\n                </mat-tab>\r\n\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { Console } from 'console';\r\nimport { ColDef, GridApi } from 'ag-grid-community';\r\nimport { User } from '@core/authentication/interface';\r\nimport { CompanyEditButtonComponent } from './company-edit-button/company-edit-button.component';\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n  tab = 0; dataSource = new MatTableDataSource<any>();\r\n  UserID: any = 0; submitted = false;\r\n  form!: FormGroup; CompanyList: any; CitiesList: any; SaveData2: any = {};HideSaveButton = true;\r\n  private currentUser: User;\r\n  CompanyID:number=0;\r\n  frameworkComponents: any;\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog,) {\r\n    this.currentUser = this.api.getCurrentUser();\r\n    this.frameworkComponents = {\r\n      buttonRenderer: CompanyEditButtonComponent,\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      // CompanyID: [0, Validators.required],\r\n      CompanyName: ['', Validators.required],\r\n      CompanyCode: ['', Validators.required],\r\n      ParentCompanyID: [null,],\r\n      MobileNo: [null, Validators.required],\r\n      ContactNo: [null, ],\r\n      GSTINNo: [null, Validators.required],\r\n      PANNo: [null, Validators.required],\r\n      Address1: [null, Validators.required],\r\n      Address2: [null,],\r\n      Address3: [null,],\r\n      CBCityID: [null],\r\n      PinCode: [null, ],\r\n      ParentCompany:[null],\r\n      CreatedBy: [this.UserID],\r\n    });\r\n\r\n    this.BindDropdown();\r\n  }\r\n\r\n\r\n  async BindDropdown() {\r\n    this.api.get('/Company_Select/Company_Select1').subscribe(\r\n      data => { this.CompanyList = data; console.log(\"company\",data) },\r\n      error => { console.error(error); }\r\n    );\r\n    this.api.get('/City/Cities_Select').subscribe(\r\n      data => { this.CitiesList = data; },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n}\r\n// ResetForm(){\r\n//   this. CompanyID=0;\r\n//   this.form.reset();\r\n//   this.HideSaveButton = true;\r\n//   this.submitted = false;\r\n//   this.BindDropdown();\r\n// }\r\nonSubmit(formData:any){\r\n  console.log(formData)\r\n  this.submitted = true;\r\n  if (this.form.invalid) {\r\n    \r\n    //alert(\"invalid form\");\r\n    return;\r\n  }\r\n  else {\r\n    this.HideSaveButton = false;\r\n    this.SaveData2 = {\r\n      CompanyID :this.CompanyID,\r\n      Companyname :this.form.value.CompanyName,\r\n      CompanyCode :this.form.value.CompanyCode,\r\n      Address1 :this.form.value.Address1,\r\n      Address2 :this.form.value.Address2,\r\n      Address3 :this.form.value.Address3,\r\n      CityId :this.form.value.CBCityID,\r\n      Pincode :this.form.value.PinCode,\r\n      ContactNo :this.form.value.ContactNo,\r\n      MobileNo :this.form.value.MobileNo,\r\n      Gstno :this.form.value.GSTINNo,\r\n      Panno :this.form.value.PANNo,\r\n     ParentCompanyId :this.form.value.ParentCompanyID,\r\n     createdby :this.currentUser.userId,\r\n\r\n     \r\n    }\r\n    console.log(this.SaveData2);\r\n    this.api.post('/Company_Select/Company_Insert_Update', this.SaveData2).subscribe(\r\n      data => {\r\n        this.dialog.alert(data[0], '',);\r\n        // this.ResetForm();\r\n        this.BindDropdown();\r\n        this.form.reset();\r\n        this.form.controls['CompanyName'].setErrors(null);\r\n        this.form.controls['CompanyCode'].setErrors(null);\r\n        this.form.controls['MobileNo'].setErrors(null);\r\n        this.form.controls['GSTINNo'].setErrors(null);\r\n        this.form.controls['PANNo'].setErrors(null);\r\n        this.form.controls['Address1'].setErrors(null);\r\n        // window.location.reload();\r\n      },\r\n      error => { console.error(error); }\r\n    );\r\n  }\r\n\r\n}\r\nget f() { return this.form.controls; }\r\n\r\n  tabchange(event: any) {\r\n    this.tab = event;\r\n  }\r\n\r\n  editCompany(record: any) {\r\n    console.log(record);\r\n    this.CompanyID=record.CompanyID;\r\n    const item: any = {\r\n\r\n      // CompanyID: record.CompanyID,\r\n      CompanyName: record.rowData.CompanyName,\r\n      CompanyCode: record.rowData.CompanyCode,\r\n      ParentCompanyID: record.rowData.ParentCompanyID,\r\n      ParentCompany: record.rowData.ParentCompanyID,\r\n      MobileNo: record.rowData.MobileNo,\r\n      ContactNo: record.rowData.ContactNo,\r\n      GSTINNo: record.rowData.GSTINNo,\r\n      PANNo: record.rowData.ParentCompany,\r\n      Address1: record.rowData.Address1,\r\n      Address2: record.rowData.Address2,\r\n      Address3: record.rowData.Address3,\r\n      CBCityID: record.rowData.CityID==null? 0 :record.rowData.CityID,\r\n      PinCode: record.rowData.PinCode,\r\n      CreatedBy:this.currentUser.userId,\r\n\r\n    }\r\n    this.form.setValue(item);\r\n    \r\n    this.tab = 0;\r\n  }\r\n\r\n\r\n  CompanylistColumn: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick: this.editCompany.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'CompanyID',\r\n      field: 'CompanyID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'CompanyName',\r\n      field: 'CompanyName',\r\n      sortable: true,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      headerName: 'CompanyCode',\r\n      field: 'CompanyCode',\r\n      sortable: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'ParentCompanyID',\r\n      field: 'ParentCompanyID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'ParentCompany',\r\n      field: 'ParentCompany',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      headerName: 'MobileNo',\r\n      field: 'MobileNo',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      headerName: 'ContactNo',\r\n      field: 'ContactNo',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      headerName: 'GSTINNo',\r\n      field: 'GSTINNo',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      headerName: 'PANNo',\r\n      field: 'PANNo',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      headerName: 'Address1',\r\n      field: 'Address1',\r\n      sortable: true,\r\n      minWidth: 250,\r\n    },\r\n    {\r\n      headerName: 'Address2',\r\n      field: 'Address2',\r\n      sortable: true,\r\n      minWidth: 250,\r\n    },\r\n    {\r\n      headerName: 'Address3',\r\n      field: 'Address3',\r\n      sortable: true,\r\n      minWidth: 250,\r\n    },\r\n    {\r\n      headerName: 'City',\r\n      field: 'City',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      headerName: 'PinCode',\r\n      field: 'PinCode',\r\n      sortable: true,\r\n      minWidth: 150,\r\n    },\r\n  ]\r\n\r\n}\r\n","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row pt-2\">\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Service Name</label>\r\n              <input type=\"text\" autocomplete=\"off\" [ngClass]=\"{'is-invalid': submitted && f.txtServiceName.invalid}\"\r\n                formControlName=\"txtServiceName\" id=\"txtServiceName\" class=\" form-control form-control-sm\" />\r\n              <div *ngIf=\"submitted && f.txtServiceName.invalid\" class=\"invalid-feedback\">\r\n                <span *ngIf=\"f.txtServiceName?.errors?.required\">Enter Service Name</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"company\">Service Code</label>\r\n              <input type=\"text\" autocomplete=\"off\" [ngClass]=\"{'is-invalid': submitted && f.txtServiceCode.invalid}\"\r\n                formControlName=\"txtServiceCode\" id=\"txtServiceCode\" class=\" form-control form-control-sm\" />\r\n              <div *ngIf=\"submitted && f.txtServiceCode.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.txtServiceCode?.errors?.required\">Enter Servicecode</div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Service Type</label>\r\n              <select class=\"form-control form-control-sm\" [ngClass]=\"{'is-invalid': submitted && f.ServiceTypeID.invalid}\"\r\n                formControlName=\"ServiceTypeID\" id=\"ServiceTypeID\">\r\n                <option value=\"null\" disabled>Select </option>\r\n                <option *ngFor=\"let i of ServiceTypelist\" value={{i.ServiceTypeID}}>{{i.ServiceType}}</option>\r\n              </select>\r\n              <div *ngIf=\"submitted && f.ServiceTypeID.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.ServiceTypeID.errors?.required\">Select Service Type</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Storage Area Type</label>\r\n              <select class=\"form-control  form-control-sm\"\r\n                [ngClass]=\"{'is-invalid': submitted && f.StorageAreaTypeID.invalid}\"\r\n                formControlName=\"StorageAreaTypeID\" id=\"StorageAreaTypeID\">\r\n                <option value=\"null\" disabled>Select </option>\r\n                <option *ngFor=\"let p of StorageAreaTypeList\" value={{p.StorageAreaTypeID}}>{{p.StorageAreaType}}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"submitted && f.StorageAreaTypeID.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.StorageAreaTypeID.errors?.required\">Select StorageAreaType</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Billing Cycle Name</label>\r\n              <select class=\"form-control  form-control-sm\"\r\n                [ngClass]=\"{'is-invalid': submitted && f.BillingCycleID.invalid}\"\r\n                formControlName=\"BillingCycleID\" id=\"BillingCycleID\">\r\n                <option value=\"null\" disabled>Select </option>\r\n                <option *ngFor=\"let p of BillingCycleNameIList\" value={{p.BillingCycleID}}>{{p.BillingCyclesName}}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"submitted && f.BillingCycleID.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.BillingCycleID.errors?.required\">Select BillingCycleName</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Is Active</label>\r\n              <input type=\"checkbox\" style=\"margin-top: 30px !important; margin-left: 2px !important;\"\r\n                formControlName=\"IsActive\" id=\"IsActive\" class=\"form-check-input\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button type=\"submit\" [hidden]=\"!HideSaveButton\" [value]=\"submitted\" class=\"btn btn-primary btn-sm\"\r\n                style=\"width: 85px !important; margin-top: 20px !important;\"> Save </button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </form>\r\n\r\n    <hr>\r\n    <br>\r\n    <mtx-grid [data]=\"ServiceList\" #gridPendingDOdList [columns]=\"columns\" [loading]=\"false\" [columnResizable]=\"true\"\r\n      [multiSelectable]=\"false\" [rowSelectable]=\"true\" [hideRowSelectionCheckbox]=\"true\" [rowHover]=\"true\"\r\n      [rowStriped]=\"false\" [showToolbar]=\"false\" [toolbarTitle]=\"'Detail List'\" [columnHideable]=\"false\"\r\n      [columnMovable]=\"true\" [expandable]=\"false\" [pageOnFront]=\"true\" [showPaginator]=\"true\"\r\n      [pageSizeOptions]=\"[10,20,50,100,500]\" [pageIndex]=\"0\" [pageSize]=\"0\">\r\n    </mtx-grid>\r\n\r\n    <ng-template #toolbarTpl>\r\n      <input placeholder=\"Search\">\r\n    </ng-template>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>","import { noUndefined } from '@angular/compiler/src/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { Column } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-service-master',\r\n  templateUrl: './service-master.component.html',\r\n  styleUrls: ['./service-master.component.scss']\r\n})\r\nexport class ServiceMasterComponent implements OnInit {\r\n\r\n    form!: FormGroup; submitted = false; Reseted = false;\r\n    StorageAreaTypeList: any; BillingCycleNameIList: any; ServiceList: any; ServiceTypelist :any;\r\n    HideSaveButton = true;\r\n    ItemID: Number = 0;\r\n    UserID: any = 0;\r\n    ServiceID: number = 0;\r\n    ServiceTypeList: any;\r\n    AreaTypeID: number = 0;\r\n    constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog,) {\r\n      this.UserID = api.getUserID();\r\n  }\r\n  ngOnInit(): void {\r\n  this.form = this.fb.group({\r\n  \r\n       \r\n        txtServiceName: ['', Validators.required],\r\n        txtServiceCode: ['', Validators.required],\r\n        ServiceTypeID: [null, Validators.required],\r\n        StorageAreaTypeID: [null, Validators.required],\r\n        BillingCycleID: [null, Validators.required],\r\n        IsActive: [true, Validators.required],\r\n        \r\n      });\r\n      this.BindinfDataToList();\r\n      this.BindDropdown();\r\n  }\r\n    BindinfDataToList() {\r\n      this.api.get('/Services/Service_Select').subscribe(\r\n        data => { this.ServiceList = data; },\r\n        error => { console.error(error); }\r\n      );\r\n    }\r\n    \r\n  \r\n    async BindDropdown() {\r\n      this.api.get('/Service/serviceType').subscribe(\r\n        data => { this.ServiceTypelist = data; },\r\n        error => { console.error(error); }\r\n      );\r\n  \r\n      this.api.get('/StorageAreaType/StorageAreaType_Select').subscribe(\r\n        data => { this.StorageAreaTypeList = data; },\r\n        error => { console.error(error); }\r\n      );\r\n  \r\n      this.api.get('/BillingCycles/BillingCycle_Select').subscribe(\r\n        data => { this.BillingCycleNameIList = data;  },\r\n        error => { console.error(error); }\r\n      );\r\n      \r\n     }\r\n  get f() { return this.form.controls; }\r\n  \r\n    onSubmit(formData: any) {\r\n      console.log(this.form);\r\n      this.submitted = true;\r\n      if (this.form.invalid) {\r\n  \r\n        return;\r\n      }\r\n      else {\r\n        this.HideSaveButton = false;\r\n        {\r\n          console.log(\"formData\",formData);\r\n          \r\n     \r\n \r\n          const dataitem={\r\n            ServiceID:this.ServiceID,\r\n            ServiceCode:formData.value.txtServiceCode,\r\n            ServiceName:formData.value.txtServiceName,\r\n            ServiceTypeID:this.form.value.ServiceTypeID==null?0:this.form.value.ServiceTypeID,\r\n            HCNCode:'',\r\n            BillingCycleID:this.form.value.BillingCycleID==null?0:this.form.value.BillingCycleID,\r\n            StorageAreaTypeID:this.form.value.StorageAreaTypeID==null?0:this.form.value.StorageAreaTypeID,\r\n            IsActive: formData.value.IsActive,\r\n            TaxID:0\r\n          };\r\n          console.log(\"dataitem\",dataitem);\r\n          this.api.post('/Services/Services_Insert', dataitem).subscribe(\r\n            data => {\r\n              this.dialog.alert(data[0], '', () => { window.location.reload(); });\r\n              this.BindinfDataToList();\r\n              \r\n            },\r\n            error => { console.error(error); }\r\n          );\r\n        }\r\n      }\r\n  \r\n    }\r\n      onReset() {\r\n      this.form.reset();\r\n      this.ServiceID =0;\r\n      this.submitted = false;\r\n      this.HideSaveButton = true;\r\n    \r\n  \r\n      this.BindinfDataToList();\r\n  \r\n    }\r\n    editService(record: any) {\r\n      \r\n      this.AreaTypeID=0;\r\n      const Billingdata=this.BillingCycleNameIList.filter((x:any)=>x.BillingCyclesName==record.BillingCyclesName);\r\n      const Servicedata=this.ServiceTypelist.filter((x:any)=>x.ServiceType==record.ServiceType);\r\n      const Storagedata=this.StorageAreaTypeList.filter((x:any)=>x.StorageAreaType==record.StorageAreaType);\r\n \r\n        \r\n      this.HideSaveButton = true;\r\n      this.submitted = false;  \r\n      this.ServiceID=record.ServiceID;\r\n      if(Storagedata.length==0)\r\n      {\r\n        this.AreaTypeID=0;\r\n      }else{\r\n        this.AreaTypeID=Number(Storagedata[0].StorageAreaTypeID);\r\n      }\r\n      const item: any = {\r\n      \r\n        txtServiceName:record.ServiceName,\r\n        txtServiceCode:record.ServiceCode==null?'':record.ServiceCode,      \r\n        ServiceTypeID:Servicedata[0].ServiceTypeID==null?0:Servicedata[0].ServiceTypeID,\r\n        StorageAreaTypeID:this.AreaTypeID,\r\n        BillingCycleID:Billingdata[0].BillingCycleID==null?0:Billingdata[0].BillingCycleID,\r\n        IsActive: record.IsActive,\r\n       };\r\n      \r\n   \r\n      this.form.setValue(item);\r\n    }\r\n  columns: MtxGridColumn[] = [\r\n      {\r\n        header: \"Action\",\r\n        field: 'Action',\r\n        minWidth: 90,\r\n        width: '90px',\r\n        pinned: 'right',\r\n        type: 'button',\r\n        buttons: [\r\n          {\r\n            type: 'icon',\r\n            icon: 'edit',\r\n            tooltip: 'Edit',\r\n             click: record => this.editService(record),\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        header: 'ServiceID',\r\n        field: 'ServiceID',\r\n        sortable: true,\r\n        hide: true\r\n      },\r\n      {\r\n        header: 'ServiceName',\r\n        field: 'ServiceName',\r\n        sortable: true,\r\n        minWidth: 250,\r\n  \r\n      },\r\n      {\r\n        header: 'ServiceCode',\r\n        field: 'ServiceCode',\r\n        sortable: true,\r\n        minWidth: 170,\r\n      },\r\n      {\r\n        header: 'ServiceType',\r\n        field: 'ServiceType',\r\n        sortable: true,\r\n        minWidth: 250,\r\n      },\r\n      {\r\n        header: 'StorageAreaType',\r\n        field: 'StorageAreaType',\r\n        sortable: true,\r\n        minWidth: 250,\r\n      },\r\n      {\r\n        header: 'BillingCyclesName',\r\n        field: 'BillingCyclesName',\r\n        sortable: true,\r\n        minWidth: 250,\r\n      },\r\n      {\r\n        header: 'HCNCode',\r\n        field: 'HCNCode',\r\n        hide: true,\r\n        minWidth: 170,\r\n      },\r\n      {\r\n        header: 'IsActive',\r\n        field: 'IsActive',\r\n        sortable: true,\r\n        minWidth: 120,\r\n      },\r\n      {\r\n        header: 'TaxID',\r\n        field: 'TaxID',\r\n        hide: true\r\n      },\r\n  \r\n    ]\r\n  }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { ServiceMasterComponent } from './service-master/service-master.component';\r\nimport { StorageAreaComponent } from './storage-area/storage-area.component';\r\nimport { WarehouseComponent } from './warehouse/warehouse.component';\r\n\r\nconst routes: Routes = [\r\n  { path:\"Storagearea\", component: StorageAreaComponent},\r\n  { path:\"Company\", component: CompanyComponent},\r\n\r\n  { path:\"Warehouse\", component: WarehouseComponent},\r\n\r\n  {path:\"ServiceMaster\",component:ServiceMasterComponent}\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SetupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { SetupRoutingModule } from './setup-routing.module';\r\nimport { StorageAreaComponent } from './storage-area/storage-area.component';\r\nimport { CompanyComponent } from './company/company.component';\r\n\r\nimport { WarehouseComponent } from './warehouse/warehouse.component';\r\nimport { StorageAreaButtonComponent } from './storage-area/storage-area-button/storage-area-button.component';\r\nimport { CompanyEditButtonComponent } from './company/company-edit-button/company-edit-button.component';\r\nimport { WarehouseEditButtonComponent } from './warehouse/warehouse-edit-button/warehouse-edit-button.component';\r\n\r\nimport { ServiceMasterComponent } from './service-master/service-master.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StorageAreaComponent,\r\n    CompanyComponent,\r\n\r\n    WarehouseComponent,\r\n    StorageAreaButtonComponent,\r\n    CompanyEditButtonComponent,\r\n    WarehouseEditButtonComponent,\r\n\r\n    ServiceMasterComponent\r\n\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    AgGridModule.withComponents([]),\r\n  ]\r\n})\r\nexport class SetupModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-storage-area-button',\r\n  templateUrl: './storage-area-button.component.html',\r\n  styleUrls: ['./storage-area-button.component.scss']\r\n})\r\n\r\n\r\nexport class StorageAreaButtonComponent implements ICellRendererAngularComp {\r\n\r\n\r\n  params: any;\r\n  label: string = '';\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event: any) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n}\r\n","<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick($event)\">Edit</button>\r\n","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <mat-card>\r\n            <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n                <mat-tab label=\"Storage Area Master\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Storage Area Name</label>\r\n                                        <input type=\"text\" formControlName=\"Storage_Area_Name\" id=\"Storage_Area_Name\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.Storage_Area_Name.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.Storage_Area_Name.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.Storage_Area_Name?.errors?.required\">Enter Storage Area\r\n                                                Name</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Storage Code</label>\r\n                                        <input type=\"text\" formControlName=\"StorageAreaCode\" id=\"StorageAreaCode\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.StorageAreaCode.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.StorageAreaCode.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.StorageAreaCode?.errors?.required\">Enter Storage AreaCode\r\n                                                Name</span>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Storage Area Type</label>\r\n                                        <select class=\"form-control form-control-sm\" formControlName=\"StorageAreaTypeID\"\r\n                                            id=\"StorageAreaTypeID\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.StorageAreaTypeID.invalid}\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option *ngFor=\"let i of StorageAreaTypeList\" value={{i.StorageAreaTypeID}}>\r\n                                                {{i.StorageAreaType}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div *ngIf=\"submitted && f.StorageAreaTypeID.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.StorageAreaTypeID?.errors?.required\">Enter Storage Area Type\r\n                                                Name</span>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Preference</label>\r\n                                        <input type=\"text\" formControlName=\"Preference\" id=\"Preference\" readonly\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <hr>\r\n                            <p class=\"font-weight-bold\"> Temperature Details </p>\r\n\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Temperature Category</label>\r\n                                        <select class=\"form-control form-control-sm\" (change)=\"GetTempdetails($event)\"\r\n                                            formControlName=\"TemperatureCategoryID\" id=\"TemperatureCategoryID\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.TemperatureCategoryID.invalid}\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option *ngFor=\"let i of TempCatList\" value={{i.TemperatureCategoryID}}>\r\n                                                {{i.TemperatureCategory}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div *ngIf=\"submitted && f.TemperatureCategoryID.invalid\"\r\n                                            class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.TemperatureCategoryID?.errors?.required\">Enter\r\n                                                TemperatureCategory Name</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Min Temperature</label>\r\n                                        <input type=\"text\" formControlName=\"MinTempareture\" id=\"MinTempareture\"\r\n                                            class=\" form-control form-control-sm\" readonly />\r\n                                        <div *ngIf=\"submitted && f.TemperatureCategoryID.invalid\"\r\n                                            class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.TemperatureCategoryID?.errors?.required\">Enter\r\n                                                Temperature Category Name</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Max Temperature</label>\r\n                                        <input type=\"text\" formControlName=\"MaxTempareture\" id=\"MaxTempareture\"\r\n                                            class=\" form-control form-control-sm\" readonly />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Temperature Controlled</label>\r\n                                        <input type=\"checkbox\"\r\n                                            style=\"margin-top: 30px !important; margin-left: 2px !important;\"\r\n                                            formControlName=\"IsTemparatureControlled\" id=\"IsTemparatureControlled\"\r\n                                            class=\"form-check-input\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.IsTemparatureControlled.invalid}\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <hr>\r\n                            <p class=\"font-weight-bold\"> Area Details </p>\r\n\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>AreaLength</label>\r\n                                        <input type=\"text\" formControlName=\"AreaLength\" id=\"AreaLength\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.AreaLength.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.AreaLength.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.AreaLength?.errors?.required\">Enter Area Length</span>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>AreaBreadth</label>\r\n                                        <input type=\"text\" formControlName=\"AreaBreadth\" id=\"AreaBreadth\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.AreaBreadth.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.AreaBreadth.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.AreaBreadth?.errors?.required\">Enter Area Breadth</span>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Area Height</label>\r\n                                        <input type=\"text\" formControlName=\"AreaHeight\" id=\"AreaHeight\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.AreaHeight.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.AreaHeight.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.AreaHeight?.errors?.required\">Enter Area Height</span>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label> Storage Capacity</label>\r\n                                        <input type=\"text\" formControlName=\"StorageCapacity\" id=\"StorageCapacity\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.StorageCapacity.invalid}\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.StorageCapacity.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.StorageCapacity?.errors?.required\"> Enter Storage\r\n                                                Capacity</span>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Is Storable</label>\r\n                                        <input type=\"checkbox\"\r\n                                            style=\"margin-top: 30px !important; margin-left: 2px !important;\"\r\n                                            formControlName=\"IsStorable\" id=\"IsActive\" class=\"form-check-input\" />\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-6 col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <button type=\"submit\" class=\"btn btn-primary btn-sm\" [hidden]=\"!HideSaveButton\"\r\n                                        [value]=\"submitted\"\r\n                                        style=\"width: 85px !important; margin-top: 20px !important;  margin-left: 300px !important;\">\r\n                                        Save\r\n                                    </button>\r\n                                </div>\r\n                                <!-- <div class=\"form-group\">\r\n                                    <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm()\"\r\n                                        style=\"width: 85px !important; \">\r\n                                        Reset\r\n                                    </button>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n\r\n                </mat-tab>\r\n                <mat-tab label=\"List\">\r\n\r\n\r\n                    <!-- <mtx-grid style=\"height: 600px\" [data]=\"StorageAreaList\" [columns]=\"StorageArea1\" [loading]=\"false\"\r\n                        [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                        [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\" [showToolbar]=\"false\"\r\n                        [toolbarTitle]=\"'Item List'\" [columnHideable]=\"false\" [columnMovable]=\"true\"\r\n                        [expandable]=\"false\" [pageOnFront]=\"false\" [showPaginator]=\"false\" [pageSize]=\"100\"></mtx-grid> -->\r\n\r\n\r\n\r\n                        <div style=\"height: 100%; box-sizing: border-box;\">\r\n                            <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"StorageAreaList\"\r\n                                [columnDefs]=\"StorageArea1\" [frameworkComponents]=\"frameworkComponents\">\r\n                            </ag-grid-angular>\r\n                        </div>\r\n                   \r\n\r\n                </mat-tab>\r\n\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { ColDef, GridApi } from 'ag-grid-community';\r\nimport { User } from '@core/authentication/interface';\r\nimport { StorageAreaButtonComponent } from './storage-area-button/storage-area-button.component';\r\n\r\n@Component({\r\n  selector: 'app-storage-area',\r\n  templateUrl: './storage-area.component.html',\r\n  styleUrls: ['./storage-area.component.scss']\r\n})\r\nexport class StorageAreaComponent implements OnInit {\r\n  private currentUser: User;\r\n  tab = 0;\r\n  frameworkComponents: any;\r\n  form!: FormGroup; StorageAreaList: any; TempCatList: any;\r\n  UserID: any = 0; StorageAreaTypeList: any; MinMaxList: any;\r\n  StorageAreaGridList: any = {};\r\n  StorageAreaDetails: Array<StorageAreaDetail> = [];\r\n  submitted = false;\r\n  StorageAreaID: number = 0;\r\n  HideSaveButton = true;\r\n  SaveStorageareaData: any = {};\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog) {\r\n    this.currentUser = this.api.getCurrentUser();\r\n    this.frameworkComponents = {\r\n      buttonRenderer: StorageAreaButtonComponent,\r\n    }\r\n  }\r\n  // AreaLength: number = 0;\r\n  // AreaHeight: number = 0;\r\n  // AreaBreadth: number = 0;\r\n  // StorageCapacity: number = 0;\r\n   WareHouseID: number = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n\r\n      Storage_Area_Name: [null, Validators.required],\r\n      StorageAreaCode: [null, Validators.required],\r\n      StorageAreaTypeID: [null, Validators.required],\r\n      Preference: [0],\r\n      TemperatureCategoryID: [null, Validators.required],\r\n      MinTempareture: [0],\r\n      MaxTempareture: [0],\r\n      AreaLength: [null, Validators.required],\r\n      AreaHeight: [null, Validators.required],\r\n      AreaBreadth: [null, Validators.required],\r\n      StorageCapacity: [null, Validators.required],\r\n      IsStorable: [true, Validators.required],\r\n      IsTemparatureControlled: [true, Validators.required],\r\n      //ParentStorageAreaID: [0, Validators.required],\r\n      //StorageArea: ['', Validators.required],\r\n      //StorageAreaID: [0, Validators.required],\r\n      //StorageAreaMasterID: [0, Validators.required],\r\n      //StorageAreaType: ['', Validators.required],\r\n      //StorageName: [null, Validators.required],\r\n      //WareHouseID: [0, Validators.required],\r\n      //WareHouseName: ['', Validators.required],\r\n\r\n      //createdBy: [this.UserID]\r\n    });\r\n\r\n    this.WareHouseID=this.currentUser.warehouseId;\r\n    this.BindDropdown()\r\n    //console.log(this.StorageAreaList)\r\n    this.form.controls['AreaLength'].setValue(0);\r\n    this.form.controls['AreaBreadth'].setValue(0);\r\n    this.form.controls['AreaHeight'].setValue(0);\r\n    this.form.controls['StorageCapacity'].setValue(0);\r\n  }\r\n\r\n  async BindDropdown() {\r\n    this.api.get('/StorageAreaType/StorageAreaType_Select').subscribe(\r\n      data => { this.StorageAreaTypeList = data },\r\n      error => { console.error(error); }\r\n    );\r\n    this.api.get('/TemperatureCategory/TemperatureCategories_Select').subscribe(\r\n      data => {\r\n        this.TempCatList = data; //console.log(\"vishal\", data);\r\n      }, error => { console.error(error); }\r\n    );\r\n    this.api.post('/Storage/StorageArea_Select').subscribe(\r\n      data => {\r\n        this.StorageAreaList = data; //console.log(data)\r\n      },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit(formData: any) {\r\n    this.submitted = true;\r\n    console.log(this.form);\r\n    if (this.form.invalid) {\r\n      alert(\"invalid form\");\r\n      return;\r\n    }\r\n    else {\r\n      // alert(\"valid \");\r\n      this.HideSaveButton = false;\r\n      this.StorageAreaGridList = [];\r\n      this.StorageAreaGridList = {\r\n        StorageAreaID: this.StorageAreaID,\r\n        WareHouseID: this.currentUser.warehouseId,\r\n        //Storage_Area_Name: this.form.value.Storage_Area_Name,\r\n        StorageAreaCode: this.form.value.StorageAreaCode,\r\n        StorageArea: this.form.value.Storage_Area_Name,\r\n        StorageAreaMasterID: Number(1),\r\n        StorageName: '',//this.form.value.StorageName,\r\n        StorageAreaTypeID: Number(this.form.value.StorageAreaTypeID),\r\n        StorageAreaType: '',//this.form.value.StorageAreaType,\r\n        ParentStorageAreaID: Number(1),\r\n        IsStorable: this.form.value.IsStorable,\r\n        IsTemparatureControlled: this.form.value.IsTemparatureControlled,\r\n        Preference: this.form.value.Preference,\r\n        MinTempareture: this.form.value.MinTempareture,\r\n        MaxTempareture: this.form.value.MaxTempareture,\r\n        TemperatureCategoryID: Number(this.form.value.TemperatureCategoryID),\r\n        AreaLength: Number(this.form.value.AreaLength),\r\n        AreaHeight: Number(this.form.value.AreaHeight),\r\n        AreaBreadth: Number(this.form.value.AreaBreadth),\r\n        StorageCapacity: Number(this.form.value.StorageCapacity),\r\n      };\r\n      this.StorageAreaDetails.push(this.StorageAreaGridList);\r\n\r\n      console.log(this.StorageAreaGridList)\r\n      this.SaveStorageareaData = {\r\n        warehouseID: this.currentUser.warehouseId,\r\n        StorageAreaID: this.StorageAreaID,\r\n        cls_TD_StorageAreaS: this.StorageAreaDetails,\r\n        createdBy: this.currentUser.userId,\r\n        BlockID: 1\r\n      };\r\n      this.submitted = true;\r\n      // console.log(this.SaveStorageareaData);\r\n      this.api.post('/Storage/StorageAreas_Insert', this.SaveStorageareaData).subscribe(\r\n        data => {\r\n          this.dialog.alert(data.Table[0].Message, '',);\r\n        },\r\n        error => { console.error(error); });\r\n        this.BindDropdown()\r\n        this.form.reset()\r\n        this.form.controls['Storage_Area_Name'].setErrors(null);\r\n        this.form.controls['StorageAreaCode'].setErrors(null);\r\n        this.form.controls['StorageAreaTypeID'].setErrors(null);\r\n        this.form.controls['TemperatureCategoryID'].setErrors(null);\r\n        this.form.controls['AreaLength'].setErrors(null);\r\n        this.form.controls['AreaHeight'].setErrors(null);\r\n        this.form.controls['AreaBreadth'].setErrors(null);\r\n        this.form.controls['StorageCapacity'].setErrors(null);\r\n        // window.location.reload();\r\n    }\r\n  }\r\n  tabchange(event: any) {\r\n    this.tab = event;\r\n  }\r\n \r\n\r\n  editstoragearea(record: any) {\r\n\r\n    const TempID = this.TempCatList.filter((x: any) => x.TemperatureCategory == record.TemperatureCategory);\r\n    console.log(record);\r\n    this.StorageAreaID = record.rowData.StorageAreaID;\r\n    this.WareHouseID= record.rowData.WareHouseID;\r\n    const item: any = {\r\n\r\n      AreaBreadth: record.rowData.AreaBreadth,\r\n      AreaHeight: record.rowData.AreaHeight,\r\n      AreaLength: record.rowData.AreaLength,\r\n      IsStorable: record.rowData.IsStorable,\r\n      IsTemparatureControlled: record.rowData.IsTemparatureControlled,\r\n      MaxTempareture: record.rowData.MaxTempareture,\r\n      MinTempareture: record.rowData.MinTempareture,\r\n      //ParentStorageAreaID: record.ParentStorageAreaID,\r\n      Preference: record.rowData.Preference,\r\n      Storage_Area_Name: record.rowData.Storage_Area_Name,\r\n      StorageAreaCode: record.rowData.StorageAreaCode,\r\n      //StorageAreaID: record.StorageAreaID,\r\n      //StorageAreaMasterID: record.ParentStorageAreaID,\r\n      //StorageAreaType: record.StorageAreaType,\r\n      StorageAreaTypeID: 1,\r\n      StorageCapacity: record.rowData.StorageCapacity,\r\n      //StorageName: record.StorageName,\r\n      //Storage_Area_Name: record.Storage_Area_Name,\r\n      TemperatureCategoryID: record.rowData.TempID[0].TemperatureCategoryID,//record.TemperatureCategoryID == null ? null : record.TemperatureCategoryID,\r\n      //WareHouseID: record.WareHouseID,\r\n      //WareHouseName: record.WareHouseName,\r\n      //createdBy: this.currentUser.userId,\r\n\r\n\r\n    }\r\n    this.form.setValue(item);\r\n    console.log(this.form.value);\r\n    this.tab = 0;\r\n\r\n  }\r\n  GetTempdetails(a: any) {\r\n    const datavalue = {\r\n      TempCategoryID: this.form.value.TemperatureCategoryID,\r\n      TempCategory: \"\",\r\n      MinTemp: 0,\r\n      MaxTemp: 0,\r\n      CreatedBy: 0\r\n    };\r\n    this.api.post('/TemperatureCategory/Get_MinMax_Temp', datavalue).subscribe(\r\n      data => {\r\n        this.MinMaxList = data;\r\n        // console.log(data);\r\n        this.form.controls['MinTempareture'].setValue(data[0].MinTemperature);\r\n        this.form.controls['MaxTempareture'].setValue(data[0].MaxTemperature);\r\n      },\r\n      error => { console.error(error); }\r\n    );\r\n  }\r\n\r\n  //   AddStorageGrid: MtxGridColumn[] = [\r\n  //     {      header: 'StorageAreaID',      field: 'StorageAreaID',            hide: false    },\r\n  //     {      header: 'WareHouseID',      field: 'WareHouseID',            hide: false    },\r\n  //     {      header: 'StorageAreaName',      field: 'StorageArea',            minWidth: 150,    },\r\n  //     {      header: 'StorageAreaCode',      field: 'StorageAreaCode',           minWidth: 300,   },\r\n  //     {      header: 'StorageAreaMasterID',      field: 'StorageAreaMasterID',            hide: false    },\r\n  //     {      header: 'Storage Area Name',      field: 'StorageName',            minWidth: 150,   },\r\n  //     {      header: 'StorageAreaTypeID',      field: 'StorageAreaTypeID',            minWidth: 300,      hide: false    },\r\n  //     {      header: 'StorageAreaType',      field: 'StorageAreaType',            minWidth: 300,    },\r\n  //     {      header: 'ParentStorageAreaID',      field: 'ParentStorageAreaID',               },\r\n  //     {      header: 'IsStorable',      field: 'IsStorable',               },\r\n  //     {      header: 'IsTemparatureControlled',      field: 'IsTemparatureControlled',            },\r\n  //     {      header: 'Preference',      field: 'Preference',            minWidth: 300,},\r\n  //     {      header: 'MinTempareture',      field: 'MinTempareture',            minWidth: 300,},\r\n  //     {      header: 'MaxTempareture',      field: 'MaxTempareture',            minWidth: 300,},\r\n  //     {      header: 'TemperatureCategoryID',      field: 'TemperatureCategoryID',            minWidth: 300,},\r\n  //     {      header: 'AreaLength',      field: 'AreaLength',            minWidth: 300,},\r\n  //     {      header: 'AreaHeight',      field: 'AreaHeight',            minWidth: 300,    },\r\n  //     {      header: 'AreaBreadth',      field: 'AreaBreadth',            minWidth: 300,    },\r\n  //     {      header: 'StorageCapacity',      field: 'StorageCapacity',            minWidth: 300,},\r\n  // ]\r\n  ItemTypelist = [\r\n    { \"ItemType\": 222 }\r\n  ]\r\n  StorageArea1: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick: this.editstoragearea.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'StorageAreaID',\r\n      field: 'StorageAreaID',\r\n\r\n      hide: true\r\n    },\r\n\r\n    {\r\n      headerName: 'WareHouseID',\r\n      field: 'WareHouseID',\r\n\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'StorageArea',\r\n      field: 'StorageArea',\r\n\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'WareHouseName',\r\n      field: 'WareHouseName',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'StorageAreaCode',\r\n      field: 'StorageAreaCode',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'Storage Area Name',\r\n      field: 'Storage_Area_Name',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'StorageAreaMasterID',\r\n      field: 'StorageAreaMasterID',\r\n\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'StorageAreaTypeID',\r\n      field: 'StorageAreaTypeID',\r\n\r\n      minWidth: 150,\r\n      hide: true\r\n\r\n    },\r\n    {\r\n      headerName: 'StorageAreaType',\r\n      field: 'StorageAreaType',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n\r\n    },\r\n    {\r\n      headerName: 'ParentStorageAreaID',\r\n      field: 'ParentStorageAreaID',\r\n\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'IsStorable',\r\n      field: 'IsStorable',\r\n\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'IsTemparatureControlled',\r\n      field: 'IsTemparatureControlled',\r\n\r\n      hide: true\r\n    },\r\n\r\n    {\r\n      headerName: 'Preference',\r\n      field: 'Preference',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'MinTempareture',\r\n      field: 'MinTempareture',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'MaxTempareture',\r\n      field: 'MaxTempareture',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'TemperatureCategory',\r\n      field: 'TemperatureCategory',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'AreaLength',\r\n      field: 'AreaLength',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'AreaHeight',\r\n      field: 'AreaHeight',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'AreaBreadth',\r\n      field: 'AreaBreadth',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n    {\r\n      headerName: 'StorageCapacity',\r\n      field: 'StorageCapacity',\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 150,\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ]\r\n\r\n}\r\n\r\nexport class StorageAreaDetail {\r\n  StorageAreaID: number = 0;\r\n  WareHouseID: number = 0;\r\n  StorageAreaCode: number = 0;\r\n  StorageArea: number = 0;\r\n  StorageAreaMasterID: number = 0;\r\n  StorageName: number = 0;\r\n  StorageAreaTypeID: number = 0;\r\n  StorageAreaType: number = 0;\r\n  ParentStorageAreaID: number = 0;\r\n  IsStorable: number = 0;\r\n  IsTemparatureControlled: number = 0;\r\n  Preference: number = 0;\r\n  MinTempareture: number = 0;\r\n  MaxTempareture: number = 0;\r\n  TemperatureCategoryID: number = 0;\r\n  AreaLength: number = 0;\r\n  AreaHeight: number = 0;\r\n  AreaBreadth: number = 0;\r\n  StorageCapacity: number = 0;\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-warehouse-edit-button',\r\n  templateUrl: './warehouse-edit-button.component.html',\r\n  styleUrls: ['./warehouse-edit-button.component.scss']\r\n})\r\nexport class WarehouseEditButtonComponent implements ICellRendererAngularComp {\r\n\r\n  params: any;\r\n  label: string = '';\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event: any) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n\r\n \r\n\r\n}\r\n","<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick($event)\">Edit</button>","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <mat-card>\r\n            <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n                <mat-tab label=\"WareHouse Master\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>WareHouse Name</label>\r\n                                        <input type=\"text\" formControlName=\"WareHouseName\" id=\"WareHouseName\"\r\n                                            class=\" form-control form-control-sm\" \r\n                                            [ngClass]=\"{'is-invalid': submitted && f.WareHouseName.invalid}\"/>\r\n                                            <div *ngIf=\"submitted && f.WareHouseName.invalid\" class=\"invalid-feedback\">\r\n                                                <span *ngIf=\"f.WareHouseName?.errors?.required\">Enter WareHouse Name</span>\r\n                                            </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"company\">WareHouse Code</label>\r\n                                        <input type=\"text\" formControlName=\"WareHouseCode\" id=\"WareHouseCode\"\r\n                                            class=\" form-control form-control-sm\" \r\n                                            [ngClass]=\"{'is-invalid': submitted && f.WareHouseCode.invalid}\"/>\r\n                                            <div *ngIf=\"submitted && f.WareHouseCode.invalid\" class=\"invalid-feedback\">\r\n                                                <span *ngIf=\"f.WareHouseCode?.errors?.required\">Enter WareHouse Code</span>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Company</label>\r\n                                        <select class=\"form-control form-control-sm\" formControlName=\"CompanyID\"\r\n                                            id=\"CompanyID\" [ngClass]=\"{'is-invalid': submitted && f.CompanyID.invalid}\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option *ngFor=\"let p of CompanyList\" value={{p.CompanyID}}>\r\n                                                {{p.CompanyName}}</option>\r\n                                            </select>\r\n                                            <div *ngIf=\"submitted && f.CompanyID.invalid\"\r\n                                            class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.CompanyID?.errors?.required\">Enter\r\n                                                Company Name</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Address 1</label>\r\n                                        <input type=\"text\" formControlName=\"Address1\" id=\"Address1\"\r\n                                            class=\" form-control form-control-sm\" \r\n                                            [ngClass]=\"{'is-invalid': submitted && f.Address1.invalid}\"/>\r\n                                            <div *ngIf=\"submitted && f.Address1.invalid\" class=\"invalid-feedback\">\r\n                                                <span *ngIf=\"f.Address1?.errors?.required\">Enter Address1 Code</span>\r\n                                            </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Address 2</label>\r\n                                        <input type=\"text\" formControlName=\"Address2\" id=\"Address2\"\r\n                                            class=\" form-control form-control-sm\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Address 3</label>\r\n                                        <input type=\"text\" formControlName=\"Address3\" id=\"Address3\"\r\n                                            class=\" form-control form-control-sm\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Contact No</label>\r\n                                        <input type=\"text\" formControlName=\"TelNumber\" id=\"TelNumber\"\r\n                                            class=\" form-control form-control-sm\" />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Fax</label>\r\n                                        <input type=\"text\" formControlName=\"Fax\" id=\"Fax\"\r\n                                            class=\" form-control form-control-sm\" />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Email Id</label>\r\n                                        <input type=\"email\" formControlName=\"EmailID\" id=\"EmailID\"\r\n                                            class=\" form-control form-control-sm\" />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>City</label>\r\n                                        <select class=\"form-control form-control-sm\" formControlName=\"CBCityID\"\r\n                                            id=\"CBCityID\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option *ngFor=\"let p of CitiesList\" value={{p.CityID}}>{{p.City}}</option>\r\n\r\n                                        </select>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>IsActive</label>\r\n                                        <input type=\"checkbox\"\r\n                                            style=\"margin-top: 30px !important; margin-left: 2px !important;\"\r\n                                            formControlName=\"IsActive\" id=\"IsActive\" class=\"form-check-input\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Select Logo    :</label>\r\n                                        <!-- <input type=\"file\"   (change)=\"onFileSelected($event)\" > -->\r\n                                        <br>\r\n                                        <img [src]=\"url\" height=\"200\"> <br/>\r\n                                        <input type='file'value=\"select\" formControlName=\"Logo\" (change)=\"onSelectFile($event)\" [ngClass]=\"{'is-invalid': submitted && f.Logo.invalid}\"/>\r\n                                        <div *ngIf=\"submitted && f.Logo.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.Logo?.errors?.required\">Please Choose Logo</span>\r\n                                        </div>\r\n                                      <img height=\"20%\"  width=\"25%\" *ngIf=\"imagePreview\" [src]=\"imagePreview\" class=\"image\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row pt-2 \">\r\n                                <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary btn-sm\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important;margin-left: 20px !important;\">\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"reset\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm()\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important \">\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </form>\r\n                </mat-tab>\r\n                <mat-tab label=\"WarehouseList\">\r\n\r\n                    <!-- <mtx-grid style=\"height: 300px\" [data]=\"WarehouseList\" [columns]=\"WarehouselistColumn\"\r\n                        [loading]=\"false\" [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                        [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\" [showToolbar]=\"false\"\r\n                        [toolbarTitle]=\"'Item List'\" [columnHideable]=\"false\" [columnMovable]=\"true\"\r\n                        [expandable]=\"false\" [pageOnFront]=\"false\" [showPaginator]=\"false\" [pageSize]=\"100\"></mtx-grid> -->\r\n\r\n                        <div style=\"height: 100%; box-sizing: border-box;\">\r\n                            <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"WarehouseList\"\r\n                                [columnDefs]=\"WarehouselistColumn\" [frameworkComponents]=\"frameworkComponents\">\r\n                            </ag-grid-angular>\r\n                        </div>\r\n                  \r\n                    <!-- <ng-template #expansionTpl let-row>\r\n                      {{row.name}}\r\n                    </ng-template> -->\r\n                </mat-tab>\r\n\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { ColDef, GridApi } from 'ag-grid-community';\r\nimport { Console } from 'console';\r\nimport { User } from '@core/authentication/interface';\r\nimport { WarehouseEditButtonComponent } from './warehouse-edit-button/warehouse-edit-button.component';\r\n\r\n@Component({\r\n  selector: 'app-warehouse',\r\n  templateUrl: './warehouse.component.html',\r\n  styleUrls: ['./warehouse.component.scss']\r\n})\r\n\r\n\r\nexport class WarehouseComponent implements OnInit {\r\n  form!: FormGroup; HideSaveButton = true;\r\n  WarehouseList: any; submitted = false; tab = 0; CompanyList: any; CitiesList: any;\r\n  SaveData2: any = {};\r\n  WareHouseDetail: Array<WareHouseDetail> = [];\r\n  frameworkComponents: any;\r\n  WareHouseID: number = 0;\r\n  url: string = '';\r\n  Editfile:any\r\n  imagePreview: string = '';\r\n  ImageDT: string = '';\r\n//  TYPED_ARRAY = new Uint8Array(ArrayBuffer:);\r\n  private currentUser: User;\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog,) {\r\n    this.currentUser = this.api.getCurrentUser();\r\n    this.frameworkComponents = {\r\n      buttonRenderer: WarehouseEditButtonComponent,\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      WareHouseCode: ['', Validators.required],\r\n      WareHouseName: ['', Validators.required],\r\n      CompanyID: [null, Validators.required],\r\n      Address1: [null, Validators.required],\r\n      Address2: [null],\r\n      Address3: [null],\r\n      TelNumber: [null],\r\n      Fax: [null],\r\n      EmailID: [null],\r\n      CBCityID: [null],\r\n      Logo: ['', Validators.required],\r\n      IsActive: [true, Validators.required],\r\n    });\r\n    this.WareHouseID = this.currentUser.warehouseId;\r\n    this.BindDropdown();\r\n  }\r\n  async BindDropdown() {\r\n    debugger;\r\n    // const WarehouseData={\r\n    //   id: this.currentUser.warehouseId,\r\n    //   userid:0,\r\n    //   companyId :0\r\n    //   };\r\n    this.api.get('/Company_Select/Company_Select1').subscribe(\r\n      data => { this.CompanyList = data; console.log(\"company\", data) },\r\n      error => { console.error(error); }\r\n    );\r\n    this.api.get('/City/Cities_Select').subscribe(\r\n      data => { this.CitiesList = data; },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n    this.api.get('/Warehouse/GetWarehouse').subscribe(\r\n      data => { this.WarehouseList = data; console.log(data); },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n\r\n  }\r\n  get f() { return this.form.controls; }\r\n  tabchange(event: any) {\r\n    this.tab = event;\r\n  }\r\n\r\n  // onFileSelected(fileInputEvent: any) {\r\n  //   const STRING_CHAR = TYPED_ARRAY.reduce((data:any, byte:any)=> {\r\n  //     return data + String.fromCharCode(byte);\r\n  //     }, '');\r\n\r\n  // }\r\n  onSelectFile(event: any) {\r\n    if (event.target.files && event.target.files[0]) {\r\n\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.imagePreview = reader.result as string;\r\n        var imageData = this.imagePreview.replace(\"data:image/jpeg;base64,\", \"\");\r\n\r\n        this.ImageDT = imageData;\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n\r\n    }\r\n  }\r\n\r\n \r\n\r\n  onSubmit(formData: any) {\r\n    console.log(formData)\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      //alert(\"invalid form\");\r\n      return;\r\n    }\r\n    else {\r\n      this.HideSaveButton = false;\r\n      \r\n      /////////var submitval = JSON.stringify({ data: this.imagePreview});\r\n      this.SaveData2 = {\r\n        WarehouseID: this.currentUser.WarehouseID,\r\n        CompanyID: this.form.value.CompanyID,\r\n        WarehouseName: this.form.value.WareHouseName,\r\n        WarehouseCode: this.form.value.WareHouseCode,\r\n        Address1: this.form.value.Address1,\r\n        Address2: this.form.value.Address2,\r\n        Address3: this.form.value.Address3,\r\n        TelNumber: this.form.value.TelNumber,\r\n        Fax: this.form.value.Fax,\r\n        EmailID: this.form.value.EmailID,\r\n        CityId: this.form.value.CBCityID,\r\n        Logo: this.ImageDT,\r\n        createdby: this.currentUser.userId,\r\n\r\n\r\n      }\r\n      console.log(this.SaveData2);\r\n      this.api.post('/Warehouse/Warehouse_Insert_Update', this.SaveData2).subscribe(\r\n        data => {\r\n          console.log(data)\r\n          this.dialog.alert(data[0], '',);\r\n          // this.ResetForm();\r\n          this.BindDropdown();\r\n          this.form.reset()\r\n          this.form.controls['WareHouseCode'].setErrors(null);\r\n          this.form.controls['WareHouseName'].setErrors(null);\r\n          this.form.controls['CompanyID'].setErrors(null);\r\n          this.form.controls['GSTINNo'].setErrors(null);\r\n          this.form.controls['Address1'].setErrors(null);\r\n          this.form.controls['Logo'].setErrors(null);\r\n          this.form.controls['Logo'].setErrors(null);\r\n          // window.location.reload();\r\n        },\r\n        error => { console.error(error); }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n\r\n  editWarehouse(record: any) {\r\n    console.log(record);\r\n    this.WareHouseID = record.WareHouseID;\r\n    const CompanyData=this.CompanyList.filter((x:any)=>x.CompanyName==record.CompanyName);\r\n    // const CityData=this.CitiesList.filter((x:any)=>x.City==record.City);\r\n    \r\n    const item: any = {\r\n      // CompanyID:record.CompanyID,\r\n      Address1: record.rowData.Address1,\r\n      Address2: record.rowData.Address2,\r\n      Address3: record.rowData.Address3,\r\n     CBCityID: record.rowData.CityID==null? 0 :record.rowData.CityID,\r\n      CompanyID:CompanyData[0].CompanyID,\r\n      EmailID: record.rowData.EmailID,\r\n      Fax: record.rowData.Fax,\r\n      IsActive: record.rowData.IsActive,\r\n      Logo: record.rowData.Logo,\r\n      TelNumber: record.rowData.TelNumber,\r\n      WareHouseCode: record.rowData.WareHouseCode,\r\n      WareHouseName: record.rowData.WareHouseName\r\n\r\n\r\n    }\r\n    this.form.setValue(item);\r\n\r\n    this.tab = 0;\r\n\r\n\r\n  }\r\n  WarehouselistColumn: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick: this.editWarehouse.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'WareHouseID',\r\n      field: 'WareHouseID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'WareHouseName',\r\n      field: 'WareHouseName',\r\n      sortable: true,\r\n      minWidth: 170,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'WareHouseCode',\r\n      field: 'WareHouseCode',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'CompanyID',\r\n      field: 'CompanyID',\r\n      sortable: true,\r\n      hide: true\r\n      \r\n    },\r\n\r\n    {\r\n      headerName: 'CompanyName',\r\n      field: 'CompanyName',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'Address1',\r\n      field: 'Address1',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'Address2',\r\n      field: 'Address2',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'Address3',\r\n      field: 'Address3',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'TelNumber',\r\n      field: 'TelNumber',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'Fax',\r\n      field: 'Fax',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n\r\n    {\r\n      headerName: 'EmailID',\r\n      field: 'EmailID',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'City',\r\n      field: 'City',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'Logo',\r\n      field: 'Logo',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n    {\r\n      headerName: 'IsActive',\r\n      field: 'IsActive',\r\n      sortable: true,\r\n      minWidth: 150,\r\n      hide: true,\r\n    },\r\n\r\n  ]\r\n\r\n\r\n\r\n}\r\n\r\nexport class WareHouseDetail {\r\n  WarehouseID: number = 0;\r\n  CompanyID: number = 0;\r\n\r\n}\r\n"]}