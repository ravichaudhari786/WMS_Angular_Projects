{"version":3,"mappings":"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","names":["BrandsEditButtonComponent","params","label","$event","onClick","Function","event","rowData","node","data","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_4__","BrandsComponent","fb","api","dialog","headerName","width","floatingFilter","cellRenderer","cellRendererParams","editProduct","bind","field","sortable","hide","filter","minWidth","currentUser","getCurrentUser","frameworkComponents","buttonRenderer","_brands_edit_button_brands_edit_button_component__WEBPACK_IMPORTED_MODULE_1__","form","group","BrandName","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","IsActive","CreatedBy","UserID","BindDropdown","get","subscribe","BrandsList","console","log","controls","formData","submitted","invalid","HideSaveButton","SaveData","BrandID","value","isActive","userId","post","alert","reset","setErrors","error","tab","record","item","setValue","CheckListDetailComponent","CheckListMasterComponent","DockMasterEditButtonComponent","DockMasterComponent","_angular_material_table__WEBPACK_IMPORTED_MODULE_5__","_dock_master_edit_button_dock_master_edit_button_component__WEBPACK_IMPORTED_MODULE_2__","dockName","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","dockNo","dockID","DocID","wareHouseID","warehouseId","DockList","DockID","DockNo","DockName","FinancialYearComponent","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ItemsComponent","header","pinned","type","buttons","icon","tooltip","click","getUserID","ItemID","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","ItemCode","ItemName","ItemTypeID","TemperatureCategoryID","BindinfDataToList","ItemList","ItemTypelist","TempCatList","window","location","reload","onReset","TemperatureCategory","temp","x","undefined","LabourContractorsComponent","_angular_material_table__WEBPACK_IMPORTED_MODULE_3__","ContractorName","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","Address1","Address2","ContactNo","PanCardNo","LicenceNo","DOJ","BankName","Branch","AccountNo","IFSCCode","EmailID","GSTNo","LabourContractorID","todayDate","_angular_common__WEBPACK_IMPORTED_MODULE_6__","transform","_r13","routes","path","component","_product_product_component__WEBPACK_IMPORTED_MODULE_1__","_items_items_component__WEBPACK_IMPORTED_MODULE_0__","_labour_contractors_labour_contractors_component__WEBPACK_IMPORTED_MODULE_2__","_report_print_info_report_print_info_component__WEBPACK_IMPORTED_MODULE_3__","_pellets_pellets_component__WEBPACK_IMPORTED_MODULE_4__","_check_list_master_check_list_master_component__WEBPACK_IMPORTED_MODULE_5__","_check_list_detail_check_list_detail_component__WEBPACK_IMPORTED_MODULE_6__","_dock_master_dock_master_component__WEBPACK_IMPORTED_MODULE_7__","_financial_year_financial_year_component__WEBPACK_IMPORTED_MODULE_8__","_remarks_remarks_component__WEBPACK_IMPORTED_MODULE_9__","_brands_brands_component__WEBPACK_IMPORTED_MODULE_10__","_state_city_state_city_component__WEBPACK_IMPORTED_MODULE_11__","MasterRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_13__","imports","exports","MasterModule","_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_18__","_master_routing_module__WEBPACK_IMPORTED_MODULE_0__","ag_grid_angular__WEBPACK_IMPORTED_MODULE_19__","declarations","_product_product_component__WEBPACK_IMPORTED_MODULE_2__","_items_items_component__WEBPACK_IMPORTED_MODULE_3__","_labour_contractors_labour_contractors_component__WEBPACK_IMPORTED_MODULE_4__","_pellets_pellets_component__WEBPACK_IMPORTED_MODULE_5__","_report_print_info_report_print_info_component__WEBPACK_IMPORTED_MODULE_6__","_check_list_master_check_list_master_component__WEBPACK_IMPORTED_MODULE_7__","_check_list_detail_check_list_detail_component__WEBPACK_IMPORTED_MODULE_8__","_dock_master_dock_master_component__WEBPACK_IMPORTED_MODULE_9__","_financial_year_financial_year_component__WEBPACK_IMPORTED_MODULE_10__","_remarks_remarks_component__WEBPACK_IMPORTED_MODULE_11__","_brands_brands_component__WEBPACK_IMPORTED_MODULE_12__","_state_city_state_city_component__WEBPACK_IMPORTED_MODULE_13__","_brands_brands_edit_button_brands_edit_button_component__WEBPACK_IMPORTED_MODULE_14__","_dock_master_dock_master_edit_button_dock_master_edit_button_component__WEBPACK_IMPORTED_MODULE_15__","_state_city_statecity_editbutton_statecity_editbutton_component__WEBPACK_IMPORTED_MODULE_16__","PelletsComponent","ProductComponent","ProductID","ProductCode","ProductName","ProductGroupID","PackingTypeID","UOMID","ItemUnit","ItemCount","ProductTypeID","WeightinKG","CubicArea","SelfLife","ApproxValue","BillingCycleID","Itemlist","ProductTypelist","ProductGrouplist","UOMlist","PackingTypelist","Temperaturelist","Billingcyclelist","Productlist","id","target","options","selectedIndex","GetTemperatureCategory","product","Product","_r21","RemarksComponent","ReportPrintInfoComponent","StateCityComponent","editState","onClick2","editCity","_statecity_editbutton_statecity_editbutton_component__WEBPACK_IMPORTED_MODULE_2__","State","StateCode","GstCode","form2","City","CStateID","StateID","HideSaveButton2","submitted2","SaveData2","CityID","StateList","Citylist","cityitem","StatecityEditbuttonComponent"],"sources":["webpack:///src/app/routes/master/brands/brands-edit-button/brands-edit-button.component.ts","webpack:///src/app/routes/master/brands/brands-edit-button/brands-edit-button.component.html","webpack:///src/app/routes/master/brands/brands.component.html","webpack:///src/app/routes/master/brands/brands.component.ts","webpack:///src/app/routes/master/check-list-detail/check-list-detail.component.ts","webpack:///src/app/routes/master/check-list-detail/check-list-detail.component.html","webpack:///src/app/routes/master/check-list-master/check-list-master.component.ts","webpack:///src/app/routes/master/check-list-master/check-list-master.component.html","webpack:///src/app/routes/master/dock-master/dock-master-edit-button/dock-master-edit-button.component.ts","webpack:///src/app/routes/master/dock-master/dock-master-edit-button/dock-master-edit-button.component.html","webpack:///src/app/routes/master/dock-master/dock-master.component.html","webpack:///src/app/routes/master/dock-master/dock-master.component.ts","webpack:///src/app/routes/master/financial-year/financial-year.component.ts","webpack:///src/app/routes/master/financial-year/financial-year.component.html","webpack:///src/app/routes/master/items/items.component.html","webpack:///src/app/routes/master/items/items.component.ts","webpack:///src/app/routes/master/labour-contractors/labour-contractors.component.html","webpack:///src/app/routes/master/labour-contractors/labour-contractors.component.ts","webpack:///src/app/routes/master/master-routing.module.ts","webpack:///src/app/routes/master/master.module.ts","webpack:///src/app/routes/master/pellets/pellets.component.ts","webpack:///src/app/routes/master/pellets/pellets.component.html","webpack:///src/app/routes/master/product/product.component.html","webpack:///src/app/routes/master/product/product.component.ts","webpack:///src/app/routes/master/remarks/remarks.component.ts","webpack:///src/app/routes/master/remarks/remarks.component.html","webpack:///src/app/routes/master/report-print-info/report-print-info.component.ts","webpack:///src/app/routes/master/report-print-info/report-print-info.component.html","webpack:///src/app/routes/master/state-city/state-city.component.html","webpack:///src/app/routes/master/state-city/state-city.component.ts","webpack:///src/app/routes/master/state-city/statecity-editbutton/statecity-editbutton.component.ts","webpack:///src/app/routes/master/state-city/statecity-editbutton/statecity-editbutton.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-brands-edit-button',\r\n  templateUrl: './brands-edit-button.component.html',\r\n  styleUrls: ['./brands-edit-button.component.scss']\r\n})\r\nexport class BrandsEditButtonComponent implements ICellRendererAngularComp{\r\n\r\n \r\n  params: any;\r\n  label: string = '';\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event: any) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n}\r\n","<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick($event)\">Edit</button>","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <mat-card>\r\n            <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n                <mat-tab label=\"Brands\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"company\">Brand Name</label>\r\n                                        <input type=\"text\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && form.controls.BrandName.errors }\"\r\n                                            formControlName=\"BrandName\" id=\"BrandName\"\r\n                                            class=\" form-control form-control-sm\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && form.controls.BrandName.errors\" class=\"text-danger\">\r\n                                            <div *ngIf=\"form.controls.BrandName.errors.required\">Brand Name is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary btn-sm\"[value]=\"submitted\" [hidden]=\"!HideSaveButton\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important;  margin-left: 200px !important;\">\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"reset\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm()\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important \">\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                            <!--/.col  click=\"onSubmit(form)\"-->\r\n\r\n                            <!--/.row-->\r\n                        </div>\r\n                    </form>\r\n\r\n                    <!-- <mtx-grid [data]=\"BrandsList\" style=\"height: 600px\" [columns]=\"columns\" [loading]=\"false\"\r\n                        [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                        [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\" [showToolbar]=\"false\"\r\n                        [toolbarTitle]=\"'Detail List'\" [columnHideable]=\"false\" [columnMovable]=\"true\"\r\n                        [expandable]=\"false\" [pageOnFront]=\"true\" [showPaginator]=\"false\" [pageSize]=\"100\"\r\n                        [pageIndex]=\"0\">\r\n                    </mtx-grid> -->\r\n\r\n                    <div style=\"height: 100%; box-sizing: border-box;\">\r\n                        <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"BrandsList\"\r\n                            [columnDefs]=\"columns\" [frameworkComponents]=\"frameworkComponents\">\r\n                        </ag-grid-angular>\r\n                    </div>\r\n\r\n                    \r\n                </mat-tab>\r\n\r\n\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { User } from '@core/authentication/interface';\r\nimport { BrandsEditButtonComponent } from './brands-edit-button/brands-edit-button.component';\r\nimport { ColDef, GridApi } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-brands',\r\n  templateUrl: './brands.component.html',\r\n  styleUrls: ['./brands.component.scss']\r\n})\r\nexport class BrandsComponent implements OnInit {\r\n\r\n  form!: FormGroup; submitted = false;\r\n  UserID: any = 0; BrandsList: any;\r\n  SaveData: any = {};\r\n  tab = 0;\r\n  BrandID:number=0;\r\n  private currentUser: User;\r\n  HideSaveButton = true;\r\n  frameworkComponents: any;\r\n\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog) {\r\n    this.currentUser = this.api.getCurrentUser();\r\n    this.frameworkComponents = {\r\n      buttonRenderer: BrandsEditButtonComponent,\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      // BrandID: [0, Validators.required],\r\n      BrandName: [\"\", Validators.required],\r\n      IsActive: true,\r\n      CreatedBy: [this.UserID]\r\n\r\n    });\r\n\r\n    this.BindDropdown();\r\n\r\n\r\n  }\r\n\r\n\r\n  async BindDropdown() {\r\n    this.api.get('/Brands/Brand_Select').subscribe(\r\n      data => { this.BrandsList = data; console.log(data); },\r\n      error1 => { //console.error('abc');//.error(error); \r\n      }\r\n    );\r\n  }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n\r\n  onSubmit(formData: any) {\r\n    // console.log(formData)\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n\r\n      return;\r\n    }\r\n    else {\r\n      this.HideSaveButton = false;\r\n      this.SaveData = {\r\n        BrandID: this.BrandID,\r\n        BrandName: this.form.value.BrandName,\r\n        isActive: true,\r\n        CreatedBy: this.currentUser.userId\r\n      }\r\n      \r\n      this.api.post('/Brands/Brand_Insert_Update', this.SaveData).subscribe(\r\n        data => {\r\n          this.dialog.alert(data[0], '',);\r\n          // window.location.reload();\r\n          this.BindDropdown();\r\n          this.form.reset()\r\n          this.form.controls['BrandName'].setErrors(null);\r\n          \r\n\r\n        },\r\n        error => { console.error(error); }\r\n      );\r\n    }\r\n  }\r\n\r\n  tabchange(event: any) {\r\n    this.tab = event;\r\n  }\r\n  // ResetForm() {\r\n  //   this.BrandID=0;\r\n  //   this.form.reset();\r\n  //   this.HideSaveButton = true;\r\n  //   this.submitted = false;\r\n  //   this.BindDropdown();\r\n  // }\r\n\r\n  editProduct(record: any) {\r\n    console.log(record)\r\n   this.BrandID=record.rowData.BrandID;\r\n    const item: any = {\r\n      BrandName: record.rowData.BrandName,\r\n      CreatedBy: record.rowData.CreatedBy,\r\n      IsActive: true\r\n    }\r\n    this.form.setValue(item);\r\n    console.log(this.form.value);\r\n    this.tab = 0;\r\n  }\r\n\r\n  columns: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick: this.editProduct.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'BrandID',\r\n      field: 'BrandID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n\r\n    {\r\n      headerName: 'BrandName',\r\n      field: 'BrandName',\r\n      sortable: true,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n      minWidth: 290,\r\n\r\n    },\r\n\r\n    {\r\n      headerName: 'CreatedBy',\r\n      field: 'CreatedBy',\r\n      sortable: true,\r\n      minWidth: 280,\r\n    },\r\n\r\n\r\n    {\r\n      headerName: 'CreatedDate',\r\n      field: 'CreatedDate',\r\n      sortable: true,\r\n      minWidth: 280,\r\n    }\r\n\r\n\r\n\r\n  ]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-check-list-detail',\r\n  templateUrl: './check-list-detail.component.html',\r\n  styleUrls: ['./check-list-detail.component.scss']\r\n})\r\nexport class CheckListDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>check-list-detail works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-check-list-master',\r\n  templateUrl: './check-list-master.component.html',\r\n  styleUrls: ['./check-list-master.component.scss']\r\n})\r\nexport class CheckListMasterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>check-list-master works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-dock-master-edit-button',\r\n  templateUrl: './dock-master-edit-button.component.html',\r\n  styleUrls: ['./dock-master-edit-button.component.scss']\r\n})\r\nexport class DockMasterEditButtonComponent implements ICellRendererAngularComp {\r\n\r\n\r\n  params: any;\r\n  label: string = '';\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event: any) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n \r\n}\r\n","<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick($event)\">Edit</button>","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <mat-card>\r\n            <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n                <mat-tab label=\"Dock Master\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Dock No</label>\r\n                                        <input type=\"text\" formControlName=\"dockNo\" id=\"dockNo\"\r\n                                            class=\" form-control form-control-sm\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.dockNo.invalid}\"\r\n                                            autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.dockNo.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.dockNo?.errors?.required\">Enter Dock No</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"company\">Dock Name</label>\r\n                                        <input type=\"text\" formControlName=\"dockName\" id=\"dockName\"\r\n                                            class=\" form-control form-control-sm\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.dockName.invalid}\"\r\n                                            autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.dockName.invalid\" class=\"invalid-feedback\">\r\n                                            <span *ngIf=\"f.dockName?.errors?.required\">Enter Dock Name</span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"row pt-2\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary btn-sm\"\r\n                                                [hidden]=\"!HideSaveButton\" [value]=\"submitted\"\r\n                                                style=\"width: 85px !important; margin-top: 20px !important;\"> Save\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm()\"\r\n                                                style=\"width: 85px !important; margin-top: 20px !important \">\r\n                                                Reset\r\n                                            </button>\r\n                                        </div>\r\n                                    </div> -->\r\n\r\n                                </div>\r\n                                <!--/.col  click=\"onSubmit(form)\"-->\r\n                            </div>\r\n                            <!--/.row-->\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div style=\"height: 100%; box-sizing: border-box;\">\r\n                        <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"DockList\"\r\n                            [columnDefs]=\"columns\" [frameworkComponents]=\"frameworkComponents\">\r\n                        </ag-grid-angular>\r\n                    </div>\r\n\r\n                    <!-- <mtx-grid style=\"height: 300px\" [data]=\"DockList\" [columns]=\"columns\" [loading]=\"false\"\r\n                        [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                        [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\" [showToolbar]=\"false\"\r\n                        [toolbarTitle]=\"'Item List'\" [columnHideable]=\"false\" [columnMovable]=\"true\"\r\n                        [expandable]=\"false\" [pageOnFront]=\"false\" [showPaginator]=\"false\" [pageSize]=\"100\"></mtx-grid>\r\n                    <ng-template #toolbarTpl>\r\n                        <input placeholder=\"Search\">\r\n                    </ng-template> -->\r\n\r\n                </mat-tab>\r\n\r\n\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { User } from '@core/authentication/interface';\r\nimport { ColDef, GridApi } from 'ag-grid-community';\r\nimport { DockMasterEditButtonComponent } from './dock-master-edit-button/dock-master-edit-button.component';\r\n@Component({\r\n  selector: 'app-dock-master',\r\n  templateUrl: './dock-master.component.html',\r\n  styleUrls: ['./dock-master.component.scss']\r\n})\r\nexport class DockMasterComponent implements OnInit {\r\n\r\n  form!: FormGroup; submitted = false; DockList: any\r\n  SaveData: any = {};\r\n  frameworkComponents: any;\r\n  private currentUser: User;\r\n  dataSource = new MatTableDataSource<any>();\r\n  tab = 0;\r\n  UserID: any = 0;\r\n  DocID:number=0;\r\n  //dockID!: FormControl;\r\n  HideSaveButton = true;\r\n\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog) {\r\n    this.currentUser = this.api.getCurrentUser();\r\n    this.frameworkComponents = {\r\n      buttonRenderer: DockMasterEditButtonComponent,\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      // dockID: [0, Validators.required],\r\n      dockName: [\"\", Validators.required],\r\n      dockNo: [\"\", Validators.required],\r\n      //  wareHouseID: [null, Validators.required],\r\n      //isActive: [true, Validators.required],\r\n      CreatedBy: [this.UserID],\r\n\r\n\r\n    });\r\n\r\n    this.BindDropdown();\r\n    //this.currentUser=this.api.getCurrentUser();\r\n  }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit(formData: any) {\r\n   console.log(formData);\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      // alert(\"invalid Form\")\r\n   \r\n     return;\r\n    }\r\n    else\r\n    {\r\n      this.HideSaveButton = false;\r\n      this.SaveData = {\r\n      dockID:this.DocID,\r\n      dockName: this.form.value.dockName,\r\n      dockNo: this.form.value.dockNo,\r\n      isActive: true,\r\n      wareHouseID: this.currentUser.warehouseId,\r\n    }\r\n    // console.log(this.SaveData);\r\n    this.api.post('/DockMaster/Dock_insert', this.SaveData).subscribe(\r\n      data => {\r\n        this.dialog.alert(data[0], '',);\r\n      \r\n        // console.log(this.form);\r\n        this.BindDropdown();\r\n        // window.location.reload();\r\n        this.form.reset();\r\n        this.form.controls['dockName'].setErrors(null);\r\n        this.form.controls['dockNo'].setErrors(null);\r\n      },\r\n      error => { console.error(error); }\r\n    );\r\n     }\r\n  }\r\n  // ResetForm(){\r\n  //   this.DocID=0;\r\n  //   this.form.reset();\r\n  //   this.HideSaveButton = true;\r\n  //   this.submitted = false;\r\n  //   this.BindDropdown();\r\n  // }\r\n\r\n  async BindDropdown() {\r\n    this.api.get('/DockMaster/Dock_Select').subscribe(\r\n      data => { this.DockList = data },\r\n      error => { console.error(error); }\r\n    );\r\n  }\r\n\r\n  tabchange(event: any) {\r\n    this.tab = event;\r\n  }\r\n\r\n  editProduct(record: any) {\r\n    console.log(record)\r\n    this.DocID=record.rowData.DockID;\r\n    const item: any = {     \r\n      dockNo: record.rowData.DockNo == null ? '' : record.rowData.DockNo,\r\n      dockName: record.rowData.DockName,     \r\n      CreatedBy: record.rowData.CreatedBy,\r\n      //isActive: true\r\n    }\r\n    this.form.setValue(item);\r\n    // console.log(this.form.value);\r\n    this.tab = 0;\r\n  }\r\n\r\n\r\n  columns: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick: this.editProduct.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'dockID',\r\n      field: 'dockID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'DockNo',\r\n      field: 'DockNo',\r\n      sortable: true,\r\n      minWidth: 170,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'DockName',\r\n      field: 'DockName',\r\n      sortable: true,\r\n      minWidth: 250,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'WareHouseName',\r\n      field: 'WareHouseName',\r\n      sortable: true,\r\n      minWidth: 250,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n\r\n    {\r\n      headerName: 'wareHouseID',\r\n      field: 'wareHouseID',\r\n      hide: true\r\n    },\r\n\r\n    {\r\n      headerName: 'CreatedBy',\r\n      field: 'CreatedBy',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n\r\n\r\n    {\r\n      headerName: 'CreatedDate',\r\n      field: 'CreatedDate',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    }\r\n\r\n\r\n\r\n  ]\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-financial-year',\r\n  templateUrl: './financial-year.component.html',\r\n  styleUrls: ['./financial-year.component.scss']\r\n})\r\nexport class FinancialYearComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>financial-year works!</p>\r\n","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row pt-2\">\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Item Name</label>\r\n              <input type=\"text\" autocomplete=\"off\" [ngClass]=\"{'is-invalid': submitted && f.ItemName.invalid}\"\r\n                formControlName=\"ItemName\" id=\"ItemName\" class=\" form-control form-control-sm\" />\r\n              <div *ngIf=\"submitted && f.ItemName.invalid\" class=\"invalid-feedback\">\r\n                <span *ngIf=\"f.ItemName?.errors?.required\">Enter Item Name</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"company\">Item Code</label>\r\n              <input type=\"text\" autocomplete=\"off\" [ngClass]=\"{'is-invalid': submitted && f.ItemCode.invalid}\"\r\n                formControlName=\"ItemCode\" id=\"ItemCode\" class=\" form-control form-control-sm\" />\r\n              <div *ngIf=\"submitted && f.ItemCode.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.ItemCode?.errors?.required\">Enter Itemcode</div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Items Type</label>\r\n              <select class=\"form-control form-control-sm\" [ngClass]=\"{'is-invalid': submitted && f.ItemTypeID.invalid}\"\r\n                formControlName=\"ItemTypeID\" id=\"ItemTypeID\">\r\n                <option value=\"null\" disabled>Select </option>\r\n                <option *ngFor=\"let i of ItemTypelist\" value={{i.ItemTypeID}}>{{i.ItemType}}</option>\r\n              </select>\r\n              <div *ngIf=\"submitted && f.ItemTypeID.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.ItemTypeID.errors?.required\">Select Item Type</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Temperature Category</label>\r\n              <select class=\"form-control  form-control-sm\"\r\n                [ngClass]=\"{'is-invalid': submitted && f.TemperatureCategoryID.invalid}\"\r\n                formControlName=\"TemperatureCategoryID\" id=\"TemperatureCategoryID\">\r\n                <option value=\"null\" disabled>Select </option>\r\n                <option *ngFor=\"let p of TempCatList\" value={{p.TemperatureCategoryID}}>{{p.TemperatureCategory}}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"submitted && f.TemperatureCategoryID.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.TemperatureCategoryID.errors?.required\">Select ProductType</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <div class=\"form-group\">\r\n              <label>Is Active</label>\r\n              <input type=\"checkbox\" style=\"margin-top: 30px !important; margin-left: 2px !important;\"\r\n                formControlName=\"IsActive\" id=\"IsActive\" class=\"form-check-input\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <button type=\"submit\" [hidden]=\"!HideSaveButton\" [value]=\"submitted\" class=\"btn btn-primary btn-sm\"\r\n                style=\"width: 85px !important; margin-top: 20px !important;\"> Save </button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </form>\r\n\r\n    <hr>\r\n    <br>\r\n    <mtx-grid [data]=\"ItemList\" #gridPendingDOdList [columns]=\"columns\" [loading]=\"false\" [columnResizable]=\"true\"\r\n      [multiSelectable]=\"false\" [rowSelectable]=\"true\" [hideRowSelectionCheckbox]=\"true\" [rowHover]=\"true\"\r\n      [rowStriped]=\"false\" [showToolbar]=\"false\" [toolbarTitle]=\"'Detail List'\" [columnHideable]=\"false\"\r\n      [columnMovable]=\"true\" [expandable]=\"false\" [pageOnFront]=\"true\" [showPaginator]=\"true\"\r\n      [pageSizeOptions]=\"[10,20,50,100,500]\" [pageIndex]=\"0\" [pageSize]=\"0\">\r\n    </mtx-grid>\r\n\r\n    <ng-template #toolbarTpl>\r\n      <input placeholder=\"Search\">\r\n    </ng-template>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>","import { noUndefined } from '@angular/compiler/src/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  styleUrls: ['./items.component.scss']\r\n})\r\nexport class ItemsComponent implements OnInit {\r\n\r\n  form!: FormGroup; submitted = false; Reseted = false;\r\n  TempCatList: any; ItemTypelist: any; ItemList: any;\r\n  HideSaveButton = true;\r\n  ItemID: Number = 0;\r\n  UserID: any = 0;\r\n\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog,) {\r\n    this.UserID = api.getUserID();\r\n}\r\nngOnInit(): void {\r\nthis.form = this.fb.group({\r\n\r\n      ItemID: [0, Validators.required],\r\n      ItemCode: ['', Validators.required],\r\n      ItemName: ['', Validators.required],\r\n      ItemTypeID: [null, Validators.required],\r\n      TemperatureCategoryID: [null, Validators.required],\r\n      IsActive: [true, Validators.required],\r\n      CreatedBy: [this.UserID]\r\n    });\r\n    this.BindinfDataToList();\r\n    this.BindDropdown();\r\n}\r\n  BindinfDataToList() {\r\n    this.api.get('/item/Items_Select').subscribe(\r\n      data => { this.ItemList = data; console.log(\"initialdata\", this.ItemList) },\r\n      error => { console.error(error); }\r\n    );\r\n  }\r\n\r\n  async BindDropdown() {\r\n    this.api.get('/item/itemtype').subscribe(\r\n      data => { this.ItemTypelist = data },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n    this.api.get('/TemperatureCategory').subscribe(\r\n      data => { this.TempCatList = data },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n    this.api.get('/item/itemlist').subscribe(\r\n      data => { this.ItemList = data },\r\n      error => { console.error(error); }\r\n    );\r\n  }\r\nget f() { return this.form.controls; }\r\n\r\n  onSubmit(formData: any) {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n\r\n      return;\r\n    }\r\n    else {\r\n      this.HideSaveButton = true;\r\n      {\r\n        const item = formData.value;\r\n        this.api.post('/item/save', item).subscribe(\r\n          data => {\r\n            this.dialog.alert(data[0], '', () => { window.location.reload(); });\r\n            this.onReset();\r\n            this.BindinfDataToList();\r\n          },\r\n          error => { console.error(error); }\r\n        );\r\n      }\r\n    }\r\n\r\n  }\r\n    onReset() {\r\n    this.form.reset();\r\n    this.ItemID\r\n    this.submitted = false;\r\n    this.HideSaveButton = true;\r\n    this.form.controls['chIsActive'].setValue(true);\r\n    this.form.controls.TemperatureCategory.setValue(\"select\");\r\n    this.BindinfDataToList();\r\n\r\n  }\r\n  editProduct(record: any) {\r\n    this.HideSaveButton = true;\r\n\r\n\r\n    var temp: any = null;\r\n    if (record.TemperatureCategory) {\r\n      temp = this.TempCatList.filter((x: any) => x.TemperatureCategory === record.TemperatureCategory);\r\n}\r\n\r\n    const item: any = {\r\n      ItemID: record.ItemID,\r\n      ItemCode: record.ItemCode == null ? '' : record.ItemCode,\r\n      ItemName: record.ItemName,\r\n      ItemTypeID: record.ItemTypeID == null ? null : record.ItemTypeID,\r\n      TemperatureCategoryID: temp == undefined ? null : temp[0].TemperatureCategoryID,\r\n      IsActive: record.IsActive,\r\n      CreatedBy: this.UserID,\r\n    }\r\n    this.form.setValue(item);\r\n  }\r\ncolumns: MtxGridColumn[] = [\r\n    {\r\n      header: \"Action\",\r\n      field: 'Action',\r\n      minWidth: 90,\r\n      width: '90px',\r\n      pinned: 'right',\r\n      type: 'button',\r\n      buttons: [\r\n        {\r\n          type: 'icon',\r\n          icon: 'edit',\r\n          tooltip: 'Edit',\r\n          click: record => this.editProduct(record),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      header: 'ItemID',\r\n      field: 'ItemID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      header: 'ItemCode',\r\n      field: 'ItemCode',\r\n      sortable: true,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      header: 'ItemName',\r\n      field: 'ItemName',\r\n      sortable: true,\r\n      minWidth: 250,\r\n\r\n    },\r\n    {\r\n      header: 'ItemTypeID',\r\n      field: 'ItemTypeID',\r\n      hide: true\r\n    },\r\n    {\r\n      header: 'ItemType',\r\n      field: 'ItemType',\r\n      sortable: true,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      header: 'TemperatureCategoryID',\r\n      field: 'TemperatureCategoryID',\r\n      hide: true\r\n    },\r\n    {\r\n      header: 'TemperatureCategory',\r\n      field: 'TemperatureCategory',\r\n      sortable: true,\r\n      minWidth: 200,\r\n    },\r\n    {\r\n      header: 'IsActive',\r\n      field: 'IsActive',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    }\r\n\r\n  ]\r\n}\r\n","\r\n\r\n<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n        <mat-tab label=\"Labour Contractor Master\">\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"row pt-2\">\r\n\r\n                <div class=\"col-sm-6\" style=\"display:none;\"> \r\n                    <div class=\"form-group\">\r\n                      <label>LabourContractorID</label>\r\n                      <input type=\"text\" \r\n                        formControlName=\"LabourContractorID\" id=\"LabourContractorID\" class=\" form-control form-control-sm\" />\r\n                      \r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                <div class=\"col-sm-6\"> \r\n                  <div class=\"form-group\">\r\n                    <label>Contractor Name</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.ContractorName.invalid}\"\r\n                      formControlName=\"ContractorName\" id=\"ContractorName\" class=\" form-control form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.ContractorName.invalid\" class=\"invalid-feedback\">\r\n                      <span *ngIf=\"f.ContractorName?.errors?.required\">Enter Contractor Name</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Address1</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.Address1.invalid}\"\r\n                        formControlName=\"Address1\" id=\"Address1\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.Address1.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.Address1?.errors?.required\">Enter Address1</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Address2</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.Address2.invalid}\"\r\n                        formControlName=\"Address2\" id=\"Address2\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.Address2.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.Address2?.errors?.required\">Enter Address2</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Contact No</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.ContactNo.invalid}\"\r\n                        formControlName=\"ContactNo\" id=\"ContactNo\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.ContactNo.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.ContactNo?.errors?.required\">Enter ContactNo</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>PanCard No</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.PanCardNo.invalid}\"\r\n                        formControlName=\"PanCardNo\" id=\"PanCardNo\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.PanCardNo.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.PanCardNo?.errors?.required\">Enter PanCardNo</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Licence No</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.LicenceNo.invalid}\"\r\n                        formControlName=\"LicenceNo\" id=\"LicenceNo\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.LicenceNo.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.LicenceNo?.errors?.required\">Enter LicenceNo</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date Of Joining</label>\r\n                      <input type=\"date\" \r\n                      \r\n                      [ngClass]=\"{'is-invalid': submitted && f.DOJ.invalid}\" \r\n                        formControlName=\"DOJ\" id=\"DOJ\" class=\" form-control form-control-sm\"/>\r\n                      <div *ngIf=\"submitted && f.DOJ.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.DOJ?.errors?.required\">Enter  Date Of Joining</span>\r\n                      </div>                    \r\n                     \r\n                    </div>                   \r\n                  </div>\r\n\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Bank Name</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.BankName.invalid}\"\r\n                        formControlName=\"BankName\" id=\"BankName\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.BankName.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.BankName?.errors?.required\">Enter  Bank Name</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Branch</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.Branch.invalid}\"\r\n                        formControlName=\"Branch\" id=\"Branch\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.Branch.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.Branch?.errors?.required\">Enter  Branch</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Account No</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.AccountNo.invalid}\"\r\n                        formControlName=\"AccountNo\" id=\"AccountNo\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.AccountNo.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.AccountNo?.errors?.required\">Enter  AccountNo</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>IFSC Code</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.IFSCCode.invalid}\"\r\n                        formControlName=\"IFSCCode\" id=\"IFSCCode\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.IFSCCode.invalid\" class=\"invalid-feedback\">\r\n                        <span *ngIf=\"f.IFSCCode?.errors?.required\">Enter  IFSCCode</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n              \r\n\r\n                <div class=\"col-sm-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"company\">Email ID</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.EmailID.invalid}\"\r\n                      formControlName=\"EmailID\" id=\"EmailID\" class=\" form-control form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.EmailID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.EmailID?.errors?.required\">Enter EmailID</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"company\">GST No</label>\r\n                      <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.GSTNo.invalid}\"\r\n                        formControlName=\"GSTNo\" id=\"GSTNo\" class=\" form-control form-control-sm\" />\r\n                      <div *ngIf=\"submitted && f.GSTNo.invalid\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.GSTNo?.errors?.required\">Enter GSTNo</div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n                <div class=\"col-sm-6\">\r\n                  <div class=\"form-group\">\r\n                    <button type=\"submit\" [disabled]=\"submitted\" class=\"btn btn-primary btn-sm\"\r\n                      style=\"width: 85px !important; margin-top: 20px !important;\"> Save </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!--/.col  click=\"onSubmit(form)\"-->\r\n            </div>\r\n            \r\n            <!--/.row-->\r\n          </form>\r\n        </mat-tab>\r\n        <mat-tab label=\"List\">\r\n\r\n          <mtx-grid\r\n         \r\n          [data]=\"ItemList\"\r\n          [columns]=\"columns\"\r\n          [loading]=\"false\"\r\n          [columnResizable]=\"true\"\r\n          [multiSelectable]=\"false\"\r\n          [rowSelectable]=\"false\"\r\n          [hideRowSelectionCheckbox]=\"false\"\r\n          [rowHover]=\"true\"\r\n          [rowStriped]=\"false\"\r\n          [showToolbar]=\"true\"\r\n          [toolbarTitle]=\"'Item List'\"\r\n          [columnHideable]=\"false\"\r\n          [columnMovable]=\"true\"\r\n          [expandable]=\"false\"\r\n          [pageOnFront]=\"true\"\r\n          [showPaginator]=\"true\"\r\n          [pageSizeOptions]=\"[10,20,50,100,500]\"\r\n          [pageIndex]=\"0\"\r\n          [pageSize]=\"10\"\r\n          [toolbarTemplate]=\"toolbarTpl\" \r\n          \r\n            >\r\n            <!-- (sortChange)=\"changeSort($event)\"\r\n(selectionChange)=\"changeSelect($event)\"\r\n[expansionTemplate]=\"expansionTpl\"-->\r\n          </mtx-grid>\r\n          <ng-template #toolbarTpl>\r\n            <input placeholder=\"Search\">\r\n          </ng-template>\r\n          <!-- <ng-template #expansionTpl let-row>\r\n            {{row.name}}\r\n          </ng-template> -->\r\n        </mat-tab>\r\n\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { noUndefined } from '@angular/compiler/src/util';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { parseDate } from 'devextreme/localization';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-labour-contractors',\r\n  templateUrl: './labour-contractors.component.html',\r\n  styleUrls: ['./labour-contractors.component.scss']\r\n})\r\n\r\n\r\nexport class LabourContractorsComponent implements OnInit {\r\n  todayDate:any ;\r\n  form!: FormGroup;submitted = false;\r\n  TempCatList:any;ItemTypelist:any;ItemList:any;\r\n\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n  tab=0;\r\n  UserID:any=0;\r\n\r\n  constructor(private fb: FormBuilder,private api:ApiService,public dialog: MtxDialog,) {\r\n   this.UserID=api.getUserID();\r\n\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      ContractorName: ['', Validators.required],\r\n      Address1: ['', Validators.required],\r\n\r\n      Address2: [''],\r\n      ContactNo: [null,Validators.required],\r\n\r\n      PanCardNo: [null, Validators.required],\r\n\r\n      LicenceNo:[null,Validators.required],\r\n\r\n      DOJ:['',Validators.required],\r\n\r\n      BankName: [''],\r\n\r\n      Branch: [''],\r\n\r\n      AccountNo: [''],\r\n\r\n      IFSCCode: [''],\r\n\r\n      EmailID: [''],\r\n\r\n      GSTNo: [''],\r\n      LabourContractorID:[0]\r\n    });\r\n\r\n\r\n    this.BindDropdown();\r\n    //console.log(this.Itemlist);\r\n  }\r\n\r\n  async BindDropdown(){\r\n     this.api.get('/LabourContracter/LabourContractors_Select').subscribe(\r\n       data=>{this.ItemTypelist=data},\r\n       error=>{ console.error(error);}\r\n     );\r\n\r\n    //  this.api.get('/TemperatureCategory').subscribe(\r\n    //   data=>{this.TempCatList=data},\r\n    //   error=>{ console.error(error);}\r\n    // );\r\n\r\n    this.api.get('/LabourContracter/LabourContractors_Select').subscribe(\r\n      data=>{this.ItemList=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n  }\r\n\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit(formData:any){\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n     //alert(\"invalid form\");\r\n     return;\r\n    }\r\n    else\r\n    {\r\n      const item=formData.value;\r\n      this.api.post('/LabourContracter/LabourContractor_Insert_Update',item).subscribe(\r\n        data=>{\r\n          this.dialog.alert(data[0],'',() => {window.location.reload();});\r\n         // window.location.reload();\r\n          },\r\n        error=>{ console.error(error);}\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  tabchange(event:any){\r\n    this.tab=event;\r\n  }\r\n \r\n  editProduct(record:any){\r\n    this.todayDate=new DatePipe('en-US').transform(record.DOJ, 'dd-MM-yyyy') ;\r\n\r\n    var temp:any=null;\r\n    if(record.TemperatureCategory){\r\n      temp=this.TempCatList.filter((x:any)=>x.TemperatureCategory===record.TemperatureCategory);\r\n      \r\n    }\r\n    //var ItemCodes = temp?null:temp[0].TemperatureCategoryID;\r\n    const item:any={\r\n      \r\n      LabourContractorID:record.LabourContractorID==null?0:record.LabourContractorID,\r\n      ContractorName : record.ContractorName==null?'':record.ContractorName,\r\n      Address1 :record.Address1,\r\n      Address2 :record.Address2,\r\n      ContactNo :record.ContactNo,\r\n      PanCardNo:record.PanCardNo,\r\n      LicenceNo:record.LicenceNo,\r\n     \r\n     // DOJ:this.todayDate,\r\n     DOJ:new DatePipe('en-US').transform(record.DOJ, 'dd-MM-yyyy') ,\r\n      BankName :record.BankName,\r\n      Branch:record.Branch,\r\n      AccountNo:record.AccountNo,\r\n      IFSCCode:record.IFSCCode,\r\n      EmailID:record.EmailID,\r\n      GSTNo:record.GSTNo\r\n    }\r\n    this.form.setValue(item);\r\n    //this.form.controls.DOJ.setValue(this.todayDate)\r\n  \r\n    this.tab=0;\r\n  }\r\n\r\n\r\n  \r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      \r\n      header: \"Action\",\r\n      field: 'Action',\r\n      minWidth: 90,\r\n      width: '90px',\r\n      pinned: 'right',\r\n      \r\n      type: 'button',\r\n      buttons: [\r\n        {\r\n        \r\n          type: 'icon',\r\n          icon: 'edit',\r\n          tooltip: 'Edit',\r\n          click: record => this.editProduct(record),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      header:'ContractorName',\r\n      field:'ContractorName',\r\n      sortable: true,\r\n      hide:false,\r\n      minWidth: 170,\r\n    \r\n      \r\n    },\r\n    {\r\n      header:'Address1',\r\n      field:'Address1',\r\n      sortable: true,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      header:'Address2',\r\n      field:'Address2',\r\n      sortable: true,\r\n      minWidth: 250,\r\n      \r\n    },\r\n    {\r\n      header:'ContactNo',\r\n      field:'ContactNo',\r\n      hide:false,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      header:'PanCardNo',\r\n      field:'PanCardNo',\r\n      sortable: true,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      header:'LicenceNo',\r\n      field:'LicenceNo',\r\n      hide:false,\r\n      minWidth: 170,\r\n    },\r\n    {\r\n      header:'DOJ',\r\n      field:'DOJ',\r\n      sortable: true,\r\n      minWidth: 200,\r\n    },\r\n    {\r\n      header:'BankName',\r\n      field:'BankName',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      header:'Branch',\r\n      field:'Branch',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      header:'AccountNo',\r\n      field:'AccountNo',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      header:'IFSCCode',\r\n      field:'IFSCCode',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      header:'EmailID',\r\n      field:'EmailID',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      header:'GSTNo',\r\n      field:'GSTNo',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      header:'LabourContractorID',\r\n      field:'LabourContractorID',\r\n      sortable: true,\r\n      minWidth: 120,\r\n    }\r\n  ]\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { LabourContractorsComponent } from './labour-contractors/labour-contractors.component';\r\nimport {ReportPrintInfoComponent} from './report-print-info/report-print-info.component';\r\nimport { PelletsComponent } from './pellets/pellets.component';\r\nimport { CheckListMasterComponent } from './check-list-master/check-list-master.component';\r\nimport { CheckListDetailComponent } from './check-list-detail/check-list-detail.component';\r\nimport { DockMasterComponent } from './dock-master/dock-master.component';\r\nimport { FinancialYearComponent } from './financial-year/financial-year.component';\r\nimport { RemarksComponent } from './remarks/remarks.component';\r\nimport { BrandsComponent } from './brands/brands.component';\r\nimport { StateCityComponent } from './state-city/state-city.component';\r\n\r\n const routes:Routes=[{ path: 'Product', component: ProductComponent },\r\n  { path: 'Items', component: ItemsComponent },\r\n  { path: 'Labour Contractors', component: LabourContractorsComponent },\r\n  { path: 'Report Print Info', component: ReportPrintInfoComponent },\r\n  { path: 'Pellets', component: PelletsComponent },\r\n  { path: 'Check List Master', component: CheckListMasterComponent },\r\n  { path: 'Check List Detail', component: CheckListDetailComponent },\r\n  { path: 'Dock Master', component: DockMasterComponent },\r\n  { path: 'Financial Year', component: FinancialYearComponent },\r\n  { path: 'Remarks', component: RemarksComponent },\r\n  { path: 'Brands', component: BrandsComponent },\r\n  { path: 'StateCity', component: StateCityComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MasterRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { MasterRoutingModule } from './master-routing.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { LabourContractorsComponent } from './labour-contractors/labour-contractors.component';\r\nimport { PelletsComponent } from './pellets/pellets.component';\r\nimport { ReportPrintInfoComponent } from './report-print-info/report-print-info.component';\r\nimport { CheckListMasterComponent } from './check-list-master/check-list-master.component';\r\nimport { CheckListDetailComponent } from './check-list-detail/check-list-detail.component';\r\nimport { DockMasterComponent } from './dock-master/dock-master.component';\r\nimport { FinancialYearComponent } from './financial-year/financial-year.component';\r\nimport { RemarksComponent } from './remarks/remarks.component';\r\nimport { BrandsComponent } from './brands/brands.component';\r\nimport { StateCityComponent } from './state-city/state-city.component';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrandsEditButtonComponent } from './brands/brands-edit-button/brands-edit-button.component';\r\nimport { DockMasterEditButtonComponent } from './dock-master/dock-master-edit-button/dock-master-edit-button.component';\r\nimport { StatecityEditbuttonComponent } from './state-city/statecity-editbutton/statecity-editbutton.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductComponent,\r\n    ItemsComponent,\r\n\r\n    LabourContractorsComponent,\r\n    PelletsComponent,\r\n    LabourContractorsComponent,\r\n    PelletsComponent,\r\n    LabourContractorsComponent,\r\n    PelletsComponent,\r\n    ReportPrintInfoComponent,\r\n    CheckListMasterComponent,\r\n    CheckListDetailComponent,\r\n    DockMasterComponent,\r\n    FinancialYearComponent,\r\n    RemarksComponent,\r\n    BrandsComponent,\r\n    StateCityComponent,\r\n    BrandsEditButtonComponent,\r\n    DockMasterEditButtonComponent,\r\n    StatecityEditbuttonComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    MasterRoutingModule,\r\n    AgGridModule.withComponents([]),\r\n  ]\r\n})\r\nexport class MasterModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pellets',\r\n  templateUrl: './pellets.component.html',\r\n  styleUrls: ['./pellets.component.scss']\r\n})\r\nexport class PelletsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>pellets works!</p>\r\n\r\n<h1>Test</h1>\r\n","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n        <mat-tab label=\"Product\">\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"row pt-2\">\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Items</label>\r\n                    <select class=\"form-control form-control-sm\" (change)=\"OnItemChange($event)\"\r\n                      [ngClass]=\"{'is-invalid': submitted && f.ItemID.invalid}\" formControlName=\"ItemID\" id=\"ItemID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let i of Itemlist\" value={{i.ItemID}}>{{i.ItemName}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.ItemID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ItemID.errors?.required\">Select Item</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"company\">Product Code</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.ProductCode.invalid}\"\r\n                      formControlName=\"ProductCode\" id=\"ProductCode\" class=\" form-control form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.ProductCode.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ProductCode.errors?.required\">Enter Product Code</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Product Name</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.ProductName.invalid}\"\r\n                      formControlName=\"ProductName\" id=\"ProductName\" class=\" form-control form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.ProductName.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ProductName.errors?.required\">Enter Product Name</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Product Type</label>\r\n                    <select class=\"form-control  form-control-sm\"\r\n                      [ngClass]=\"{'is-invalid': submitted && f.ProductTypeID.invalid}\" formControlName=\"ProductTypeID\"\r\n                      id=\"ProductTypeID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let p of ProductTypelist\" value={{p.ProductTypeID}}>{{p.ProductType1}}</option>\r\n\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.ProductTypeID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ProductTypeID.errors?.required\">Select Product Type</div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Product Group</label>\r\n                    <select class=\"form-control  form-control-sm\"\r\n                      [ngClass]=\"{'is-invalid': submitted && f.ProductGroupID.invalid}\" formControlName=\"ProductGroupID\"\r\n                      id=\"ProductGroupID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let p of ProductGrouplist\" value={{p.ProductGroupID}}>{{p.ProductGroupName}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.ProductGroupID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ProductGroupID.errors?.required\">Select Product Group</div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <!-- /.form-group -->\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Unit of Measurement</label>\r\n                    <select class=\"form-control  form-control-sm\"\r\n                      [ngClass]=\"{'is-invalid': submitted && f.UOMID.invalid}\" formControlName=\"UOMID\" id=\"UOMID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let u of UOMlist\" value={{u.UOMID}}>{{u.UOMName}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.UOMID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.UOMID.errors?.required\">Select Unit of Measurement</div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Packing Type</label>\r\n                    <select class=\"form-control  form-control-sm\"\r\n                      [ngClass]=\"{'is-invalid': submitted && f.PackingTypeID.invalid}\" formControlName=\"PackingTypeID\"\r\n                      id=\"PackingTypeID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let p of PackingTypelist\" value={{p.PackingTypeID}}>{{p.PackingType1}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.PackingTypeID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.PackingTypeID.errors?.required\">Select Packing Type </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Cublic Area (in FT)</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.CubicArea.invalid}\"\r\n                      formControlName=\"CubicArea\" id=\"CubicArea\" class=\"form-control  form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.CubicArea.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.CubicArea.errors?.required\">Enter Cubic Area</div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Weight (in KG)</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.WeightinKG.invalid}\"\r\n                      formControlName=\"WeightinKG\" id=\"WeightinKG\" class=\"form-control  form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.WeightinKG.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.WeightinKG.errors?.required\">Enter Weight in KG</div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Item Count</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.ItemCount.invalid}\"\r\n                      formControlName=\"ItemCount\" id=\"ItemCount\" class=\"form-control  form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.ItemCount.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ItemCount.errors?.required\">Enter Item Count</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Self Life (In Days)</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.SelfLife.invalid}\"\r\n                      formControlName=\"SelfLife\" id=\"SelfLife\" class=\"form-control  form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.SelfLife.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.SelfLife.errors?.required\">Enter Self Life</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Temperature Category</label>\r\n                    <select class=\"form-control  form-control-sm\"\r\n                      [ngClass]=\"{'is-invalid': submitted && f.TemperatureCategoryID.invalid}\"\r\n                      formControlName=\"TemperatureCategoryID\" id=\"TemperatureCategoryID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let t of Temperaturelist\" value={{t.TemperatureCategoryID}}>\r\n                        {{t.TemperatureCategory}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.TemperatureCategoryID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.TemperatureCategoryID.errors?.required\">Select Temperature Category</div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- /.form-group -->\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Approx Value</label>\r\n                    <input type=\"text\" [ngClass]=\"{'is-invalid': submitted && f.ApproxValue.invalid}\"\r\n                      formControlName=\"ApproxValue\" id=\"ApproxValue\" class=\" form-control form-control-sm\" />\r\n                    <div *ngIf=\"submitted && f.ApproxValue.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.ApproxValue.errors?.required\">Enter Approx Value</div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Billing Cycle</label>\r\n                    <select [ngClass]=\"{'is-invalid': submitted && f.BillingCycleID.invalid}\"\r\n                      class=\"form-control form-control-sm\" formControlName=\"BillingCycleID\" id=\"BillingCycleID\">\r\n                      <option value=\"null\" disabled>Select </option>\r\n                      <option *ngFor=\"let b of Billingcyclelist\" value={{b.BillingCycleID}}>{{b.BillingCyclesName}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"submitted && f.BillingCycleID.invalid\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.BillingCycleID.errors?.required\">Select Billing cycle</div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <!-- col end-->\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Is Active</label>\r\n                    <input type=\"checkbox\" style=\"margin-top: 30px !important; margin-left: 2px !important;\"\r\n                      formControlName=\"IsActive\" id=\"IsActive\" class=\"form-check-input\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-6 col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <button type=\"submit\" [disabled]=\"submitted\" class=\"btn btn-primary btn-sm\"\r\n                      style=\"width: 85px !important; margin-top: 20px !important;\"> Save </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!--/.col  click=\"onSubmit(form)\"-->\r\n            </div>\r\n            <!--/.row-->\r\n          </form>\r\n        </mat-tab>\r\n        <mat-tab label=\"List\">\r\n\r\n          <mtx-grid [data]=\"Productlist\"\r\n          [columns]=\"columns\"\r\n          [loading]=\"false\"\r\n          [columnResizable]=\"true\"\r\n            [multiSelectable]=\"false\"\r\n            [rowSelectable]=\"false\"\r\n            [hideRowSelectionCheckbox]=\"false\"\r\n            [rowHover]=\"true\"\r\n            [rowStriped]=\"false\"\r\n            [showToolbar]=\"true\"\r\n            [toolbarTitle]=\"'Product List'\"\r\n            [columnHideable]=\"false\"\r\n            [columnMovable]=\"true\"\r\n            [expandable]=\"false\"\r\n            [pageOnFront]=\"true\"\r\n            [showPaginator]=\"true\"\r\n            [pageSizeOptions]=\"[10,20,50,100,500]\"\r\n            [pageIndex]=\"0\"\r\n            [pageSize]=\"10\"\r\n            [toolbarTemplate]=\"toolbarTpl\"\r\n            >\r\n            <!-- (sortChange)=\"changeSort($event)\"\r\n(selectionChange)=\"changeSelect($event)\"\r\n[expansionTemplate]=\"expansionTpl\"-->\r\n          </mtx-grid>\r\n          <ng-template #toolbarTpl>\r\n            <input placeholder=\"Search\">\r\n          </ng-template>\r\n          <!-- <ng-template #expansionTpl let-row>\r\n            {{row.name}}\r\n          </ng-template> -->\r\n        </mat-tab>\r\n\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder,FormGroup,Validators } from '@angular/forms';\r\n import { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService} from '@core';\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { MtxDialog } from '@ng-matero/extensions/dialog';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss'],\r\n  //providers: [CommanService]\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  form!: FormGroup;submitted = false;\r\n  UOMlist:any;ProductGrouplist:any;ProductTypelist:any;Itemlist:any;\r\n  PackingTypelist:any;Temperaturelist:any;Billingcyclelist:any;Productlist:any;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n  tab=0;\r\n  UserID:any=0;\r\n\r\n  constructor(private fb: FormBuilder,private api:ApiService,public dialog: MtxDialog,) {\r\n   this.UserID=api.getUserID();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n\r\n      ProductID: [0, Validators.required],\r\n      ProductCode : [null, Validators.required],\r\n      ProductName : [null, Validators.required],\r\n      ItemID : [null, Validators.required],\r\n      ProductGroupID: [null, [Validators.required]],\r\n      PackingTypeID: [null, Validators.required],\r\n      UOMID: [null, Validators.required],\r\n      ItemUnit: [0],\r\n      ItemCount: [null, Validators.required],\r\n      ProductTypeID:[null, Validators.required],\r\n     // ProductTaxCategoryID:[null],\r\n      TemperatureCategoryID: [null],\r\n      WeightinKG:[null, Validators.required],\r\n      // Width:[null],\r\n      // Length:[null],\r\n      // Height:[null],\r\n      CubicArea:[null, Validators.required],\r\n      SelfLife:[null, Validators.required],\r\n      ApproxValue:[null, Validators.required],\r\n      BillingCycleID:[null, Validators.required],\r\n      IsActive:[true, Validators.required],\r\n      CreatedBy:[this.UserID],\r\n\r\n    });\r\n\r\n    this.BindDropdown();\r\n    //console.log(this.Itemlist);\r\n  }\r\n\r\n  async BindDropdown(){\r\n     this.api.get('/item/itemlist').subscribe(\r\n       data=>{this.Itemlist=data},\r\n       error=>{ console.error(error);}\r\n     );\r\n\r\n     this.api.get('/ProductTypes').subscribe(\r\n      data=>{this.ProductTypelist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n    this.api.get('/ProductGroups').subscribe(\r\n      data=>{this.ProductGrouplist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n    this.api.get('/uomlist').subscribe(\r\n      data=>{this.UOMlist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n    this.api.get('/GetPackingTypes').subscribe(\r\n      data=>{this.PackingTypelist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n    this.api.get('/TemperatureCategories').subscribe(\r\n      data=>{this.Temperaturelist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n    this.api.get('/GetBillingCycles').subscribe(\r\n      data=>{this.Billingcyclelist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n    this.api.get('/ProductList').subscribe(\r\n      data=>{this.Productlist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n\r\n  }\r\n\r\n  public OnItemChange($event:any)\r\n  {\r\n    let id = $event.target.options[$event.target.options.selectedIndex].value;\r\n    this.GetTemperatureCategory(id);\r\n\r\n  }\r\n\r\n  public GetTemperatureCategory(id:any){\r\n    this.api.get('/itemwisetempCategory?itemid='+id).subscribe(\r\n      data=>{this.Temperaturelist=data},\r\n      error=>{ console.error(error);}\r\n    );\r\n  }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit(formData:any){\r\n\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n     //alert(\"invalid form\");\r\n     return;\r\n    }\r\n    else\r\n    {\r\n      const product=formData.value;\r\n      this.api.post('/SaveProduct',product).subscribe(\r\n        data=>{\r\n          this.dialog.alert(data[0]);\r\n          window.location.reload();\r\n          },\r\n        error=>{ console.error(error);}\r\n      );\r\n    }\r\n  }\r\n\r\n  tabchange(event:any){\r\n    this.tab=event;\r\n  }\r\n  editProduct(record:any){\r\n    const Product:any={\r\n      ProductID:record.ProductID,\r\n      ProductCode : record.ProductCode,\r\n      ProductName :record.ProductName,\r\n      ItemID : record.ItemID,\r\n      ProductGroupID: record.ProductGroupID,\r\n      PackingTypeID: record.PackingTypeID,\r\n      UOMID: record.UOMID,\r\n      ItemUnit: record.ItemUnit,\r\n      ItemCount: record.ItemCount,\r\n      ProductTypeID:record.ProductTypeID,\r\n      TemperatureCategoryID:record.TemperatureCategoryID,\r\n      WeightinKG:record.WeightinKG,\r\n      CubicArea:record.CubicArea,\r\n      SelfLife:record.SelfLife,\r\n      ApproxValue:record.ApproxValue,\r\n      BillingCycleID:record.BillingCycleID,\r\n      IsActive:record.IsActive,\r\n      CreatedBy:this.UserID,\r\n    }\r\n    this.form.setValue(Product);\r\n    this.tab=0;\r\n  }\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: \"Action\",\r\n      field: 'Action',\r\n      minWidth: 80,\r\n      width: '80px',\r\n      pinned: 'right',\r\n      type: 'button',\r\n      buttons: [\r\n        {\r\n          type: 'icon',\r\n          icon: 'edit',\r\n          tooltip: 'Edit',\r\n          click: record => this.editProduct(record),\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      header:'ProductID',\r\n      field:'ProductID',\r\n      sortable: true,\r\n      minWidth: 100,\r\n      hide:true\r\n    },\r\n    {\r\n      header:'ProductCode',\r\n      field:'ProductCode',\r\n      sortable: true,\r\n      minWidth: 110,\r\n    },\r\n    {\r\n      header:'ProductName',\r\n      field:'ProductName',\r\n      sortable: true,\r\n      minWidth: 220,\r\n    },\r\n    {\r\n      header:'ItemID',\r\n      field:'ItemID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'ItemName',\r\n      field:'ItemName',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'ProductGroupID',\r\n      field:'ProductGroupID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'ProductGroupName',\r\n      field:'ProductGroupName',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'PackingTypeID',\r\n      field:'PackingTypeID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'PackingType',\r\n      field:'PackingType',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'UOMID',\r\n      field:'UOMID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'UOMName',\r\n      field:'UOMName',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'ItemUnit',\r\n      field:'ItemUnit',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'ItemCount',\r\n      field:'ItemCount',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'ProductTypeID',\r\n      field:'ProductTypeID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'ProductType',\r\n      field:'ProductType',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'TemperatureCategoryID',\r\n      field:'TemperatureCategoryID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'TemperatureCategory',\r\n      field:'TemperatureCategory',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'WeightinKG',\r\n      field:'WeightinKG',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'CubicArea',\r\n      field:'CubicArea',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'SelfLife',\r\n      field:'SelfLife',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'ApproxValue',\r\n      field:'ApproxValue',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'BillingCycleID',\r\n      field:'BillingCycleID',\r\n      hide:true\r\n    },\r\n    {\r\n      header:'BillingCycles',\r\n      field:'BillingCyclesName',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      header:'IsActive',\r\n      field:'IsActive',\r\n      sortable: true,\r\n      minWidth: 100,\r\n    }\r\n\r\n  ]\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-remarks',\r\n  templateUrl: './remarks.component.html',\r\n  styleUrls: ['./remarks.component.scss']\r\n})\r\nexport class RemarksComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>remarks works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-report-print-info',\r\n  templateUrl: './report-print-info.component.html',\r\n  styleUrls: ['./report-print-info.component.scss']\r\n})\r\nexport class ReportPrintInfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>report-print-info works!</p>\r\n","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <mat-card>\r\n            <mat-tab-group animationDuration=\"0ms\" (selectedIndexChange)=\"tabchange($event)\" [(selectedIndex)]=\"tab\">\r\n\r\n                <mat-tab label=\"State Master\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onStateSave(form)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>State Name</label>\r\n                                        <input type=\"text\" formControlName=\"State\" class=\"form-control\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.State.invalid}\" />\r\n                                            <div *ngIf=\"submitted && f.State.invalid\" class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"f.State?.errors?.required\">Enter State</div>\r\n                                            </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>State Code</label>\r\n                                        <input type=\"text\" formControlName=\"StateCode\" class=\"form-control\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.StateCode.invalid}\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.StateCode.invalid\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.StateCode?.errors?.required\">Enter State Code</div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>GST Code</label>\r\n                                        <input type=\"text\" formControlName=\"GstCode\" class=\"form-control\"\r\n                                            [ngClass]=\"{'is-invalid': submitted && f.GstCode.invalid}\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted && f.GstCode.invalid\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.GstCode?.errors?.required\">Enter GST Code</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary btn-sm\" [hidden]=\"!HideSaveButton\"\r\n                                            [value]=\"submitted\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important;\"> Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"reset\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm()\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important \">\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                            <!--/.col  click=\"onSubmit(form)\"-->\r\n                        </div>\r\n                      \r\n                        <!-- <mtx-grid style=\"height: 500px\" [data]=\"StateList\" [columns]=\"StateColumn\" [loading]=\"false\"\r\n                            [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                            [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\"\r\n                            [showToolbar]=\"false\" [toolbarTitle]=\"'Item List'\" [columnHideable]=\"false\"\r\n                            [columnMovable]=\"true\" [expandable]=\"false\" [pageOnFront]=\"false\" [showPaginator]=\"false\"\r\n                            [pageSize]=\"100\"></mtx-grid>\r\n                        <ng-template #toolbarTpl>\r\n                            <input placeholder=\"Search\">\r\n                        </ng-template> -->\r\n\r\n                        <div style=\"height: 100%; box-sizing: border-box;\">\r\n                            <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"StateList\"\r\n                                [columnDefs]=\"StateColumn\" [frameworkComponents]=\"frameworkComponents\">\r\n                            </ag-grid-angular>\r\n                        </div>\r\n    \r\n\r\n                    </form>\r\n\r\n                </mat-tab>\r\n\r\n                <mat-tab label=\"City Master\">\r\n\r\n                    <form [formGroup]=\"form2\" (ngSubmit)=\"onCitySave(form2)\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" formControlName=\"City\" class=\"form-control\"\r\n                                            [ngClass]=\"{'is-invalid': submitted2 && f2.City.invalid}\" autocomplete=\"off\" />\r\n                                        <div *ngIf=\"submitted2 && f2.City.invalid\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f2.City?.errors?.required\">Enter City</div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>State</label>\r\n                                        <select class=\"form-control form-control-sm\" formControlName=\"CStateID\"\r\n                                            id=\"CStateID\" [ngClass]=\"{'is-invalid': submitted2 && f2.CStateID.invalid}\">\r\n                                            <option value=\"null\" disabled>Select </option>\r\n                                            <option selected=\"true\" *ngFor=\"let i of StateList\" value={{i.StateID}}>{{i.State}}</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"submitted2 && f2.CStateID.invalid\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f2.CStateID?.errors?.required\">Enter State</div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"row pt-2\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary btn-sm\" [hidden]=\"!HideSaveButton2\"\r\n                                            [value]=\"submitted2\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important;\"> Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6 col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"reset\" class=\"btn btn-primary btn-sm\" (click)=\"ResetForm2()\"\r\n                                            style=\"width: 85px !important; margin-top: 20px !important \">\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                       \r\n                        <!-- <mtx-grid style=\"height: 400px\" [data]=\"Citylist\" [columns]=\"CityColumn\" [loading]=\"false\"\r\n                            [columnResizable]=\"true\" [multiSelectable]=\"false\" [rowSelectable]=\"false\"\r\n                            [hideRowSelectionCheckbox]=\"false\" [rowHover]=\"true\" [rowStriped]=\"false\"\r\n                            [showToolbar]=\"false\" [toolbarTitle]=\"'Item List'\" [columnHideable]=\"false\"\r\n                            [columnMovable]=\"true\" [expandable]=\"false\" [pageOnFront]=\"false\" [showPaginator]=\"false\"\r\n                            [pageSize]=\"100\"></mtx-grid>\r\n                        <ng-template #toolbarTpl>\r\n                            <input placeholder=\"Search\">\r\n                        </ng-template> -->\r\n\r\n                        <div style=\"height: 100%; box-sizing: border-box;\">\r\n                            <ag-grid-angular style=\"height: 450px;\" class=\"ag-theme-alpine\" [rowData]=\"Citylist\"\r\n                                [columnDefs]=\"CityColumn\" [frameworkComponents]=\"frameworkComponents\">\r\n                            </ag-grid-angular>\r\n                        </div>\r\n    \r\n\r\n                    </form>\r\n\r\n\r\n                </mat-tab>\r\n\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiService } from '@core';\r\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\r\nimport { User } from '@core/authentication/interface';\r\nimport { Console } from 'console';\r\nimport { ColDef, GridApi } from 'ag-grid-community';\r\nimport { StatecityEditbuttonComponent } from './statecity-editbutton/statecity-editbutton.component';\r\n\r\n@Component({\r\n  selector: 'app-state-city',\r\n  templateUrl: './state-city.component.html',\r\n  styleUrls: ['./state-city.component.scss']\r\n})\r\nexport class StateCityComponent implements OnInit {\r\n  form!: FormGroup;\r\n  form2!: FormGroup;\r\n  tab = 0;\r\n  frameworkComponents: any;\r\n  StateList: any; UserID: any = 0; SaveData: any = {};\r\n  submitted = false; submitted2 = false;\r\n  HideSaveButton = true; HideSaveButton2 = true;\r\n  StateID: number = 0; CityID: number = 0;\r\n  private currentUser: User; Citylist: any; SaveData2: any = {};\r\n\r\n  constructor(private fb: FormBuilder, private api: ApiService, public dialog: MtxDialog) {\r\n    this.currentUser = this.api.getCurrentUser();\r\n    this.frameworkComponents = {\r\n      buttonRenderer: StatecityEditbuttonComponent,\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = this.fb.group({\r\n      // StateID: [0, Validators.required],\r\n      State: ['', Validators.required],\r\n      StateCode: ['', Validators.required],\r\n      CreatedBy: [this.UserID],\r\n      GstCode: ['', Validators.required],\r\n\r\n    })\r\n\r\n    this.form2 = this.fb.group({\r\n      // CityID: [0, Validators.required],\r\n      City: ['', Validators.required],\r\n      CStateID: [null, Validators.required],\r\n      CreatedBy: [this.UserID],\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    this.BindDropdown();\r\n  }\r\n\r\n  get f() { return this.form.controls; }\r\n  get f2() { return this.form2.controls; }\r\n\r\n  onStateSave(formData: any) {\r\n    console.log(formData)\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      //alert(\"invalid form\");\r\n      return;\r\n    }\r\n    else {\r\n      this.HideSaveButton = false;\r\n      this.SaveData = {\r\n        StateID: this.StateID,\r\n        State: this.form.value.State,\r\n        StateCode: this.form.value.StateCode,\r\n        GstCode: this.form.value.GstCode,\r\n        CreatedBy: this.currentUser.userId\r\n      }\r\n      console.log(\"save\",this.SaveData);\r\n      this.api.post('/City/States_insert', this.SaveData).subscribe(\r\n        data => {\r\n          this.dialog.alert(data[0], '',);\r\n          this.BindDropdown();\r\n          this.form.reset();\r\n          this.form.controls['State'].setErrors(null);\r\n          this.form.controls['StateCode'].setErrors(null);\r\n          this.form.controls['GstCode'].setErrors(null);\r\n          \r\n          // window.location.reload();\r\n        },\r\n        error => { console.error(error); }\r\n      );\r\n    }\r\n  }\r\n\r\n  onCitySave(formData: any) {\r\n    console.log(formData)\r\n    this.HideSaveButton2 = false;\r\n\r\n\r\n    this.submitted2 = true;\r\n    if (this.form2.invalid) {\r\n      // alert(\"invalid form\");\r\n      return;\r\n    }\r\n    else {\r\n      this.HideSaveButton2 = false;\r\n      this.SaveData2 = {\r\n        CityID: this.CityID,\r\n        City: this.form2.value.City,\r\n        StateID: this.form2.value.CStateID,\r\n        CreatedBy: this.currentUser.userId\r\n      }\r\n      console.log(this.SaveData2);\r\n      this.api.post('/City/Cities_Insert', this.SaveData2).subscribe(\r\n        data => {\r\n          this.dialog.alert(data[0], '',);\r\n          \r\n          this.BindDropdown();\r\n          this.form.reset();\r\n          this.form.controls['City'].setErrors(null);\r\n          this.form.controls['CStateID'].setErrors(null);\r\n          \r\n          // window.location.reload();\r\n        },\r\n        error => { console.error(error); }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  tabchange(event: any) {\r\n    this.tab = event;\r\n  }\r\n\r\n  async BindDropdown() {\r\n    this.api.get('/City/States_Select').subscribe(\r\n      data => { this.StateList = data },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n    this.api.get('/City/Cities_Select').subscribe(\r\n      data => { this.Citylist = data },\r\n      error => { console.error(error); }\r\n    );\r\n\r\n  }\r\n  // ResetForm() {\r\n  //   this.StateID = 0;\r\n  //   this.form.reset();\r\n  //   this.HideSaveButton = true;\r\n  //   this.submitted = false;\r\n  //   this.BindDropdown();\r\n\r\n  // }\r\n  // ResetForm2() {\r\n  //   this.CityID = 0;\r\n  //   this.form2.reset();\r\n  //   this.HideSaveButton2 = true;\r\n  //   this.submitted2 = false;\r\n  //   this.BindDropdown();\r\n\r\n  // }\r\n\r\n  editState(record: any) {\r\n    console.log(record);\r\n    this.StateID = record.StateID;\r\n    const item: any = {\r\n\r\n      // StateID: record.StateID,\r\n      State: record.rowData.State,\r\n      StateCode: record.rowData.StateCode,\r\n      GstCode: record.rowData.GstCode,\r\n      CreatedBy: this.currentUser.userId,\r\n\r\n    }\r\n    this.form.setValue(item);\r\n\r\n    this.tab = 0;\r\n  }\r\n\r\n\r\n  editCity(record: any) {\r\n    console.log(record);\r\n    this.CityID = record.CityID;\r\n    const cityitem: any = {\r\n\r\n      // CityID: record.CityID,\r\n      City: record.rowData.City,\r\n      CStateID: record.rowData.StateID,\r\n      CreatedBy: this.currentUser.userId,\r\n\r\n    }\r\n    console.log(cityitem);\r\n    this.form2.setValue(cityitem);\r\n    console.log(this.form2.value);\r\n    this.tab = 1;\r\n\r\n\r\n  }\r\n\r\n\r\n  StateColumn: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick: this.editState.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'StateID',\r\n      field: 'StateID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'State',\r\n      field: 'State',\r\n      sortable: true,\r\n      minWidth: 170,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'StateCode',\r\n      field: 'StateCode',\r\n      sortable: true,\r\n      minWidth: 250,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n\r\n    },\r\n    {\r\n      headerName: 'CreatedDate',\r\n      field: 'CreatedDate',\r\n      sortable: true,\r\n      minWidth: 250,\r\n\r\n    },\r\n\r\n    {\r\n      headerName: 'GstCode',\r\n      field: 'GstCode',\r\n      sortable: true,\r\n      minWidth: 120,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n  ]\r\n\r\n\r\n  CityColumn: ColDef[] = [\r\n    {\r\n      headerName: 'Action', width: 100, floatingFilter: false,\r\n      cellRenderer: \"buttonRenderer\",\r\n      cellRendererParams: {\r\n        // onClick: this.onBtnClick1.bind(this),\r\n        onClick2: this.editCity.bind(this),\r\n        label: 'Click 1'\r\n      }\r\n    },\r\n    {\r\n      headerName: 'CityID',\r\n      field: 'CityID',\r\n      sortable: true,\r\n      hide: true\r\n    },\r\n    {\r\n      headerName: 'City',\r\n      field: 'City',\r\n      sortable: true,\r\n      minWidth: 170,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'state',\r\n      field: 'state',\r\n      sortable: true,\r\n      minWidth: 250,\r\n      filter: 'agTextColumnFilter', floatingFilter: true,\r\n    },\r\n    {\r\n      headerName: 'CreatedDate',\r\n      field: 'CreatedDate',\r\n      sortable: true,\r\n      minWidth: 250,\r\n\r\n    },\r\n\r\n\r\n  ]\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\n@Component({\r\n  selector: 'app-statecity-editbutton',\r\n  templateUrl: './statecity-editbutton.component.html',\r\n  styleUrls: ['./statecity-editbutton.component.scss']\r\n})\r\nexport class StatecityEditbuttonComponent implements ICellRendererAngularComp {\r\n\r\n  params: any;\r\n  label: string = '';\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.label = this.params.label || null;\r\n  }\r\n\r\n  refresh(params?: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  onClick($event: any) {\r\n    if (this.params.onClick instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick(params);\r\n\r\n    }\r\n  }\r\n\r\n  onClick2($event: any) {\r\n    if (this.params.onClick2 instanceof Function) {\r\n      // put anything into params u want pass into parents component\r\n      const params = {\r\n        event: $event,\r\n        rowData: this.params.node.data\r\n        // ...something\r\n      }\r\n      this.params.onClick2(params);\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick($event)\">Edit</button>\r\n<button type=\"button\" class=\"btn btn-secondary btn-sm\"   (click)=\"onClick2($event)\">Edit</button>"]}