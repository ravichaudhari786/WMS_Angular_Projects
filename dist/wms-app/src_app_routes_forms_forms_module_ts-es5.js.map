{"version":3,"mappings":"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","names":["DataService","http","term","get","pipe","rsp","items","getMockPeople","filter","x","name","toLocaleLowerCase","indexOf","_angular_core__WEBPACK_IMPORTED_MODULE_3__","factory","id","index","isActive","picture","age","gender","company","email","phone","disabled","_angular_core__WEBPACK_IMPORTED_MODULE_2__","FormsDatetimeComponent","fb","dateAdapter","translate","today","moment__WEBPACK_IMPORTED_MODULE_0__","tomorrow","date","min","clone","year","month","hour","minute","max","start","type","_mat_datetimepicker_core__WEBPACK_IMPORTED_MODULE_3__","group","dateTime","Date","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","dateTimeYear","time","timeAMPM","mintest","filtertest","touch","translateSubscription","onLangChange","subscribe","res","setLocale","lang","unsubscribe","selectors","decls","vars","consts","template","ctx","_r22","FormsDynamicComponent","toastr","_angular_forms__WEBPACK_IMPORTED_MODULE_1__","key","templateOptions","label","placeholder","required","expressionProperties","fieldGroupClassName","fieldGroup","className","options","labelProp","valueProp","description","wrappers","pattern","form","valid","showToast","model","form2","model2","obj","success","JSON","stringify","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FormsElementsComponent","username","reactiveForm1","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","mobile","city","address","tele","website","reactiveForm2","_a","hasError","_b","routes","path","component","_elements_elements_component__WEBPACK_IMPORTED_MODULE_0__","_dynamic_dynamic_component__WEBPACK_IMPORTED_MODULE_2__","_select_select_component__WEBPACK_IMPORTED_MODULE_1__","_datetime_datetime_component__WEBPACK_IMPORTED_MODULE_3__","FormsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","COMPONENTS","_elements_elements_component__WEBPACK_IMPORTED_MODULE_2__","_select_select_component__WEBPACK_IMPORTED_MODULE_3__","_dynamic_dynamic_component__WEBPACK_IMPORTED_MODULE_4__","_datetime_datetime_component__WEBPACK_IMPORTED_MODULE_5__","COMPONENTS_DYNAMIC","_select_edit_edit_component__WEBPACK_IMPORTED_MODULE_6__","FormsModule","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_forms_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","FormsSelectEditComponent","dialogRef","data","value","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__","car_r2","FormsSelectComponent","dataService","dialog","people$","getPeople","people","simpleItems","companiesNames","forEach","c","i","companies","push","car","cars","tag","Promise","loading","setTimeout","resolve","open","_edit_edit_component__WEBPACK_IMPORTED_MODULE_1__","autoFocus","features","_data_service__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/routes/forms/data.service.ts","webpack:///src/app/routes/forms/datetime/datetime.component.html","webpack:///src/app/routes/forms/datetime/datetime.component.ts","webpack:///src/app/routes/forms/dynamic/dynamic.component.ts","webpack:///src/app/routes/forms/dynamic/dynamic.component.html","webpack:///src/app/routes/forms/elements/elements.component.html","webpack:///src/app/routes/forms/elements/elements.component.ts","webpack:///src/app/routes/forms/forms-routing.module.ts","webpack:///src/app/routes/forms/forms.module.ts","webpack:///src/app/routes/forms/select/edit/edit.component.ts","webpack:///src/app/routes/forms/select/edit/edit.component.html","webpack:///src/app/routes/forms/select/select.component.html","webpack:///src/app/routes/forms/select/select.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport interface Person {\r\n  id: string;\r\n  isActive: boolean;\r\n  age: number;\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  email: string;\r\n  phone: string;\r\n  disabled?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getGithubAccounts(term?: string) {\r\n    if (term) {\r\n      return this.http\r\n        .get<any>(`https://api.github.com/search/users?q=${term}`)\r\n        .pipe(map(rsp => rsp.items));\r\n    } else {\r\n      return of([]);\r\n    }\r\n  }\r\n\r\n  getAlbums() {\r\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums');\r\n  }\r\n\r\n  getPhotos() {\r\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos');\r\n  }\r\n\r\n  getPeople(term?: string): Observable<Person[]> {\r\n    let items = getMockPeople();\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n}\r\n\r\nfunction getMockPeople() {\r\n  return [\r\n    {\r\n      id: '5a15b13c36e7a7f00cf0d7cb',\r\n      index: 2,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 23,\r\n      name: 'Karyn Wright',\r\n      gender: 'female',\r\n      company: 'ZOLAR',\r\n      email: 'karynwright@zolar.com',\r\n      phone: '+1 (851) 583-2547',\r\n    },\r\n    {\r\n      id: '5a15b13c2340978ec3d2c0ea',\r\n      index: 3,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 35,\r\n      name: 'Rochelle Estes',\r\n      disabled: true,\r\n      gender: 'female',\r\n      company: 'EXTRAWEAR',\r\n      email: 'rochelleestes@extrawear.com',\r\n      phone: '+1 (849) 408-2029',\r\n    },\r\n    {\r\n      id: '5a15b13c663ea0af9ad0dae8',\r\n      index: 4,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 25,\r\n      name: 'Mendoza Ruiz',\r\n      gender: 'male',\r\n      company: 'ZYTRAX',\r\n      email: 'mendozaruiz@zytrax.com',\r\n      phone: '+1 (904) 536-2020',\r\n    },\r\n    {\r\n      id: '5a15b13cc9eeb36511d65acf',\r\n      index: 5,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 39,\r\n      name: 'Rosales Russell',\r\n      gender: 'male',\r\n      company: 'ELEMANTRA',\r\n      email: 'rosalesrussell@elemantra.com',\r\n      phone: '+1 (868) 473-3073',\r\n    },\r\n    {\r\n      id: '5a15b13c728cd3f43cc0fe8a',\r\n      index: 6,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 32,\r\n      name: 'Marquez Nolan',\r\n      gender: 'male',\r\n      company: 'MIRACLIS',\r\n      disabled: true,\r\n      email: 'marqueznolan@miraclis.com',\r\n      phone: '+1 (853) 571-3921',\r\n    },\r\n    {\r\n      id: '5a15b13ca51b0aaf8a99c05a',\r\n      index: 7,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 28,\r\n      name: 'Franklin James',\r\n      gender: 'male',\r\n      company: 'CAXT',\r\n      email: 'franklinjames@caxt.com',\r\n      phone: '+1 (868) 539-2984',\r\n    },\r\n    {\r\n      id: '5a15b13cc3b9381ffcb1d6f7',\r\n      index: 8,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 24,\r\n      name: 'Elsa Bradley',\r\n      gender: 'female',\r\n      company: 'MATRIXITY',\r\n      email: 'elsabradley@matrixity.com',\r\n      phone: '+1 (994) 583-3850',\r\n    },\r\n    {\r\n      id: '5a15b13ce58cb6ff62c65164',\r\n      index: 9,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 40,\r\n      name: 'Pearson Thompson',\r\n      gender: 'male',\r\n      company: 'EZENT',\r\n      email: 'pearsonthompson@ezent.com',\r\n      phone: '+1 (917) 537-2178',\r\n    },\r\n    {\r\n      id: '5a15b13c90b95eb68010c86e',\r\n      index: 10,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 32,\r\n      name: 'Ina Pugh',\r\n      gender: 'female',\r\n      company: 'MANTRIX',\r\n      email: 'inapugh@mantrix.com',\r\n      phone: '+1 (917) 450-2372',\r\n    },\r\n    {\r\n      id: '5a15b13c2b1746e12788711f',\r\n      index: 11,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 25,\r\n      name: 'Nguyen Elliott',\r\n      gender: 'male',\r\n      company: 'PORTALINE',\r\n      email: 'nguyenelliott@portaline.com',\r\n      phone: '+1 (905) 491-3377',\r\n    },\r\n    {\r\n      id: '5a15b13c605403381eec5019',\r\n      index: 12,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 31,\r\n      name: 'Mills Barnett',\r\n      gender: 'male',\r\n      company: 'FARMEX',\r\n      email: 'millsbarnett@farmex.com',\r\n      phone: '+1 (882) 462-3986',\r\n    },\r\n    {\r\n      id: '5a15b13c67e2e6d1a3cd6ca5',\r\n      index: 13,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 36,\r\n      name: 'Margaret Reynolds',\r\n      gender: 'female',\r\n      company: 'ROOFORIA',\r\n      email: 'margaretreynolds@rooforia.com',\r\n      phone: '+1 (935) 435-2345',\r\n    },\r\n    {\r\n      id: '5a15b13c947c836d177aa85c',\r\n      index: 14,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 29,\r\n      name: 'Yvette Navarro',\r\n      gender: 'female',\r\n      company: 'KINETICA',\r\n      email: 'yvettenavarro@kinetica.com',\r\n      phone: '+1 (807) 485-3824',\r\n    },\r\n    {\r\n      id: '5a15b13c5dbbe61245c1fb73',\r\n      index: 15,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 20,\r\n      name: 'Elisa Guzman',\r\n      gender: 'female',\r\n      company: 'KAGE',\r\n      email: 'elisaguzman@kage.com',\r\n      phone: '+1 (868) 594-2919',\r\n    },\r\n    {\r\n      id: '5a15b13c38fd49fefea8db80',\r\n      index: 16,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 33,\r\n      name: 'Jodie Bowman',\r\n      gender: 'female',\r\n      company: 'EMTRAC',\r\n      email: 'jodiebowman@emtrac.com',\r\n      phone: '+1 (891) 565-2560',\r\n    },\r\n    {\r\n      id: '5a15b13c9680913c470eb8fd',\r\n      index: 17,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 24,\r\n      name: 'Diann Booker',\r\n      gender: 'female',\r\n      company: 'LYRIA',\r\n      email: 'diannbooker@lyria.com',\r\n      phone: '+1 (830) 555-3209',\r\n    },\r\n  ];\r\n}\r\n","<page-header></page-header>\r\n\r\n<p>\r\n  The following examples use\r\n  <a href=\"https://github.com/kuhnroyal/mat-datetimepicker\" target=\"_blank\">\r\n    <code>mat-datetimepicker</code>\r\n  </a> component.\r\n</p>\r\n\r\n<mat-card>\r\n  <mat-card-title>Date types with: {{ type }}</mat-card-title>\r\n\r\n  <form [formGroup]=\"group\">\r\n    <mat-form-field>\r\n      <mat-placeholder>DateTime</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"datetimePicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #datetimePicker [openOnFocus]=\"true\" startView=\"month\" [timeInterval]=\"5\"\r\n                          type=\"datetime\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"datetimePicker\" [max]=\"tomorrow\" [min]=\"today\"\r\n             autocomplete=\"false\" formControlName=\"dateTime\" matInput required>\r\n      <mat-error *ngIf=\"group.get('dateTime')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTime')?.errors?.matDatepickerMin\">min</mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTime')?.errors?.matDatepickerMax\">max</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>DateTime Year selector</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"datetimeYearPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #datetimeYearPicker [multiYearSelector]=\"true\" [openOnFocus]=\"true\"\r\n                          startView=\"month\" [timeInterval]=\"5\" type=\"datetime\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"datetimeYearPicker\" [max]=\"tomorrow\" [min]=\"today\"\r\n             autocomplete=\"false\" formControlName=\"dateTimeYear\" matInput required>\r\n      <mat-error *ngIf=\"group.get('dateTimeYear')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTimeYear')?.errors?.matDatepickerMin\">min</mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTimeYear')?.errors?.matDatepickerMax\">max</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Time</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"timePicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #timePicker [openOnFocus]=\"true\" [timeInterval]=\"5\" type=\"time\">\r\n      </mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"timePicker\" formControlName=\"time\" matInput required>\r\n      <mat-error *ngIf=\"group.get('time')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Time AM/PM</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"timeAMPMPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #timeAMPMPicker [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          [twelvehour]=\"true\" type=\"time\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"timeAMPMPicker\" formControlName=\"timeAMPM\" matInput required>\r\n      <mat-error *ngIf=\"group.get('timeAMPM')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Date</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"datePicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #datePicker [openOnFocus]=\"true\" type=\"date\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"datePicker\" formControlName=\"date\" matInput required>\r\n      <mat-error *ngIf=\"group.get('date')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Month</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"monthPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #monthPicker mode=\"portrait\" [openOnFocus]=\"true\" type=\"month\">\r\n      </mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"monthPicker\" formControlName=\"month\" matInput required>\r\n      <mat-error *ngIf=\"group.get('month')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Year</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"yearPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #yearPicker [openOnFocus]=\"true\" type=\"year\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"yearPicker\" formControlName=\"year\" matInput required>\r\n      <mat-error *ngIf=\"group.get('year')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Min/Max Test</mat-placeholder>\r\n      <input [matDatetimepicker]=\"minTestPicker\" [max]=\"max\" [min]=\"min\" formControlName=\"mintest\"\r\n             matInput required>\r\n      <mat-datetimepicker-toggle [for]=\"minTestPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #minTestPicker mode=\"landscape\" [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          type=\"datetime\"></mat-datetimepicker>\r\n      <mat-error *ngIf=\"group.get('mintest')?.errors?.required\">\r\n        {{'validations.required' }}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('mintest')?.errors?.matDatepickerMin\">min</mat-error>\r\n      <mat-error *ngIf=\"group.get('mintest')?.errors?.matDatepickerMax\">max</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Filter Test</mat-placeholder>\r\n      <input [matDatepickerFilter]=\"filter\" [matDatetimepicker]=\"filterTestPicker\"\r\n             formControlName=\"filtertest\" matInput required>\r\n      <mat-datetimepicker-toggle [for]=\"filterTestPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #filterTestPicker mode=\"landscape\" [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          type=\"datetime\"></mat-datetimepicker>\r\n      <mat-error *ngIf=\"group.get('filtertest')?.errors?.required\">\r\n        {{'validations.required'}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('filtertest')?.errors?.matDatepickerFilter\">filter</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>TouchUi</mat-placeholder>\r\n      <input [matDatetimepicker]=\"touch\" [min]=\"min\" formControlName=\"touch\" matInput required>\r\n      <mat-datetimepicker-toggle [for]=\"touch\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #touch mode=\"portrait\" [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          [touchUi]=\"true\" type=\"datetime\"></mat-datetimepicker>\r\n    </mat-form-field>\r\n  </form>\r\n\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { MatDatetimepickerFilterType } from '@mat-datetimepicker/core';\r\nimport * as moment from 'moment';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-forms-datetime',\r\n  templateUrl: './datetime.component.html',\r\n  styleUrls: ['./datetime.component.scss'],\r\n})\r\nexport class FormsDatetimeComponent implements OnInit, OnDestroy {\r\n  type = 'moment';\r\n\r\n  group: FormGroup;\r\n  today: moment.Moment;\r\n  tomorrow: moment.Moment;\r\n  min: moment.Moment;\r\n  max: moment.Moment;\r\n  start: moment.Moment;\r\n  filter: (date: moment.Moment | null, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  translateSubscription!: Subscription;\r\n\r\n  constructor(\r\n    fb: FormBuilder,\r\n    private dateAdapter: DateAdapter<any>,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.today = moment.utc();\r\n    this.tomorrow = moment.utc().date(moment.utc().date() + 1);\r\n    this.min = this.today.clone().year(2018).month(10).date(3).hour(11).minute(10);\r\n    this.max = this.min.clone().date(4).minute(45);\r\n    this.start = this.today.clone().year(1930).month(9).date(28);\r\n    this.filter = (date: moment.Moment | null, type: MatDatetimepickerFilterType) => {\r\n      if (date === null) {\r\n        return true;\r\n      }\r\n      switch (type) {\r\n        case MatDatetimepickerFilterType.DATE:\r\n          return date.year() % 2 === 0 && date.month() % 2 === 0 && date.date() % 2 === 0;\r\n        case MatDatetimepickerFilterType.HOUR:\r\n          return date.hour() % 2 === 0;\r\n        case MatDatetimepickerFilterType.MINUTE:\r\n          return date.minute() % 2 === 0;\r\n      }\r\n    };\r\n\r\n    this.group = fb.group({\r\n      dateTime: [new Date('2017-11-09T12:10:00.000Z'), Validators.required],\r\n      dateTimeYear: [new Date('2017-11-09T12:10:00.000Z'), Validators.required],\r\n      date: [null, Validators.required],\r\n      time: [null, Validators.required],\r\n      timeAMPM: [null, Validators.required],\r\n      month: [null, Validators.required],\r\n      year: [null, Validators.required],\r\n      mintest: [this.today, Validators.required],\r\n      filtertest: [this.today, Validators.required],\r\n      touch: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.translateSubscription = this.translate.onLangChange.subscribe((res: { lang: any }) => {\r\n      this.dateAdapter.setLocale(res.lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.translateSubscription.unsubscribe();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-forms-dynamic',\r\n  templateUrl: './dynamic.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormsDynamicComponent implements OnInit {\r\n  form = new FormGroup({});\r\n  model = { email: 'email@gmail.com' };\r\n  fields: FormlyFieldConfig[] = [\r\n    {\r\n      key: 'text',\r\n      type: 'input',\r\n      templateOptions: {\r\n        label: 'Text',\r\n        placeholder: 'Type here to see the other field become enabled...',\r\n        required: true,\r\n      },\r\n    },\r\n    {\r\n      key: 'text2',\r\n      type: 'input',\r\n      templateOptions: {\r\n        label: 'Hey!',\r\n        placeholder: 'This one is disabled if there is no text in the other input',\r\n      },\r\n      expressionProperties: {\r\n        'templateOptions.disabled': '!model.text',\r\n      },\r\n    },\r\n    {\r\n      key: 'email',\r\n      type: 'input',\r\n      templateOptions: {\r\n        label: 'Email address',\r\n        placeholder: 'Enter email',\r\n        required: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Advanced Layout\r\n  form2 = new FormGroup({});\r\n  model2: any = {};\r\n  options: FormlyFormOptions = {};\r\n\r\n  fields2: FormlyFieldConfig[] = [\r\n    {\r\n      fieldGroupClassName: 'row',\r\n      fieldGroup: [\r\n        {\r\n          className: 'col-sm-6',\r\n          type: 'input',\r\n          key: 'firstName',\r\n          templateOptions: {\r\n            label: 'First Name',\r\n            required: true,\r\n          },\r\n        },\r\n        {\r\n          className: 'col-sm-6',\r\n          type: 'input',\r\n          key: 'lastName',\r\n          templateOptions: {\r\n            label: 'Last Name',\r\n            required: true,\r\n          },\r\n          expressionProperties: {\r\n            'templateOptions.disabled': '!model.firstName',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      fieldGroupClassName: 'row',\r\n      fieldGroup: [\r\n        {\r\n          className: 'col-sm-6',\r\n          type: 'input',\r\n          key: 'street',\r\n          templateOptions: {\r\n            label: 'Street',\r\n          },\r\n        },\r\n        {\r\n          className: 'col-sm-3',\r\n          type: 'combobox',\r\n          key: 'cityId',\r\n          templateOptions: {\r\n            label: 'City',\r\n            options: [\r\n              { id: 1, name: '北京' },\r\n              { id: 2, name: '上海' },\r\n              { id: 3, name: '广州' },\r\n              { id: 4, name: '深圳' },\r\n            ],\r\n            labelProp: 'name',\r\n            valueProp: 'id',\r\n            required: true,\r\n            description: 'This is a custom field type.',\r\n          },\r\n          wrappers: ['form-field'],\r\n        },\r\n        {\r\n          className: 'col-sm-3',\r\n          type: 'input',\r\n          key: 'zip',\r\n          templateOptions: {\r\n            type: 'number',\r\n            label: 'Zip',\r\n            max: 99999,\r\n            min: 0,\r\n            pattern: '\\\\d{5}',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'textarea',\r\n      key: 'otherInput',\r\n      templateOptions: {\r\n        label: 'Other Input',\r\n      },\r\n    },\r\n    {\r\n      type: 'checkbox',\r\n      key: 'otherToo',\r\n      templateOptions: {\r\n        label: 'Other Checkbox',\r\n      },\r\n    },\r\n  ];\r\n\r\n  constructor(private toastr: ToastrService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  submit() {\r\n    if (this.form.valid) {\r\n      this.showToast(this.model);\r\n    }\r\n  }\r\n\r\n  submit2() {\r\n    if (this.form2.valid) {\r\n      this.showToast(this.model2);\r\n    }\r\n  }\r\n\r\n  showToast(obj: any) {\r\n    this.toastr.success(JSON.stringify(obj));\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<p>\r\n  The dynamic forms are powered by\r\n  <a href=\"#\" target=\"_blank\">\r\n    <code>ngx-formly</code>\r\n  </a>.\r\n</p>\r\n\r\n<mat-card>\r\n  <mat-card-title>Simple</mat-card-title>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\r\n    <button mat-raised-button color=\"primary\">Submit</button>\r\n  </form>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-title>Advanced Layout</mat-card-title>\r\n\r\n  <form [formGroup]=\"form2\" (ngSubmit)=\"submit2()\">\r\n    <formly-form [model]=\"model2\" [fields]=\"fields2\" [options]=\"options\" [form]=\"form2\">\r\n    </formly-form>\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!form2.valid\">Submit</button>\r\n  </form>\r\n</mat-card>\r\n","<page-header></page-header>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Form Inline</mat-card-title>\r\n\r\n      <form>\r\n        <mat-form-field class=\"m-r-8\">\r\n          <input matInput placeholder=\"Username\" [(ngModel)]=\"q.username\" name=\"username\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"m-r-8\">\r\n          <input matInput placeholder=\"Email\" [(ngModel)]=\"q.email\" name=\"email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"m-r-8\">\r\n          <mat-label>Gender</mat-label>\r\n          <mat-select [(ngModel)]=\"q.gender\" name=\"gender\">\r\n            <mat-option>-- None --</mat-option>\r\n            <mat-option value=\"1\">male</mat-option>\r\n            <mat-option value=\"2\">female</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\">Search</button>\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n  <div fxFlex=\"33.33\" fxFlex.lt-sm=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Form Horizontal</mat-card-title>\r\n\r\n      <form [formGroup]=\"reactiveForm1\" class=\"form-field-full\">\r\n        <mat-form-field>\r\n          <mat-label>Username</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"username\" required>\r\n          <mat-error *ngIf=\"reactiveForm1.get('username')?.invalid\">\r\n            {{'validations.required'}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Gender</mat-label>\r\n          <mat-select required formControlName=\"gender\" required>\r\n            <mat-option>-- None --</mat-option>\r\n            <mat-option value=\"1\">male</mat-option>\r\n            <mat-option value=\"2\">female</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"reactiveForm1.get('gender')?.invalid\">\r\n            {{'validations.required'}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"mobile\"\r\n                 required>\r\n          <mat-icon matSuffix>smartphone</mat-icon>\r\n          <mat-error *ngIf=\"reactiveForm1.get('mobile')?.invalid\">\r\n            {{'validations.required'}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" required>\r\n          <mat-error *ngIf=\"reactiveForm1.get('email')?.invalid\">\r\n            {{getErrorMessage(reactiveForm1) }}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>City</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"city\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Address</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"address\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Company</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"company\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Tele</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"tele\">\r\n          <mat-icon matSuffix>phone</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"website\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"\r\n                 formControlName=\"date\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"66.67\" fxFlex.lt-sm=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Form Horizontal</mat-card-title>\r\n\r\n      <form [formGroup]=\"reactiveForm2\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Username</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"username\"\r\n                     required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('username')?.invalid\">\r\n                {{'validations.required' }}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Gender</mat-label>\r\n              <mat-select required formControlName=\"gender\" required>\r\n                <mat-option>-- None --</mat-option>\r\n                <mat-option value=\"1\">male</mat-option>\r\n                <mat-option value=\"2\">female</mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('gender')?.invalid\">\r\n                {{'validations.required'}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Mobile</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" type=\"number\"\r\n                     formControlName=\"mobile\" required>\r\n              <mat-icon matSuffix>smartphone</mat-icon>\r\n              <mat-error *ngIf=\"reactiveForm2.get('mobile')?.invalid\">\r\n                {{'validations.required'}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Email</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('email')?.invalid\">\r\n                {{getErrorMessage(reactiveForm2)}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>City</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"city\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Address</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"address\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Company</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"company\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Tele</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"tele\">\r\n              <mat-icon matSuffix>phone</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Website</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"website\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\"\r\n                     formControlName=\"date\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-forms-elements',\r\n  templateUrl: './elements.component.html',\r\n})\r\nexport class FormsElementsComponent implements OnInit, OnDestroy {\r\n  q = {\r\n    username: '',\r\n    email: '',\r\n    gender: '',\r\n  };\r\n\r\n  reactiveForm1: FormGroup;\r\n  reactiveForm2: FormGroup;\r\n\r\n  translateSubscription!: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dateAdapter: DateAdapter<any>,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.reactiveForm1 = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      gender: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      city: [''],\r\n      address: [''],\r\n      company: [''],\r\n      tele: [''],\r\n      website: [''],\r\n      date: [''],\r\n    });\r\n\r\n    this.reactiveForm2 = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      gender: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      city: [''],\r\n      address: [''],\r\n      company: [''],\r\n      tele: [''],\r\n      website: [''],\r\n      date: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.translateSubscription = this.translate.onLangChange.subscribe((res: { lang: any }) => {\r\n      this.dateAdapter.setLocale(res.lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.translateSubscription.unsubscribe();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email')?.hasError('required')\r\n      ? 'validations.required'\r\n      : form.get('email')?.hasError('email')\r\n      ? 'validations.invalid_email'\r\n      : '';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormsElementsComponent } from './elements/elements.component';\r\nimport { FormsSelectComponent } from './select/select.component';\r\nimport { FormsDynamicComponent } from './dynamic/dynamic.component';\r\nimport { FormsDatetimeComponent } from './datetime/datetime.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'elements', component: FormsElementsComponent },\r\n  { path: 'dynamic', component: FormsDynamicComponent },\r\n  { path: 'select', component: FormsSelectComponent },\r\n  { path: 'datetime', component: FormsDatetimeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FormsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { FormsRoutingModule } from './forms-routing.module';\r\n\r\nimport { FormsElementsComponent } from './elements/elements.component';\r\nimport { FormsSelectComponent } from './select/select.component';\r\nimport { FormsDynamicComponent } from './dynamic/dynamic.component';\r\nimport { FormsDatetimeComponent } from './datetime/datetime.component';\r\nimport { FormsSelectEditComponent } from './select/edit/edit.component';\r\n\r\nconst COMPONENTS: any[] = [\r\n  FormsElementsComponent,\r\n  FormsSelectComponent,\r\n  FormsDynamicComponent,\r\n  FormsDatetimeComponent,\r\n];\r\nconst COMPONENTS_DYNAMIC: any[] = [FormsSelectEditComponent];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, FormsRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class FormsModule {}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-forms-select-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss'],\r\n})\r\nexport class FormsSelectEditComponent implements OnInit {\r\n  defaultBindingsList = [\r\n    { value: 1, label: 'Vilnius' },\r\n    { value: 2, label: 'Kaunas' },\r\n    { value: 3, label: 'Pavilnys', disabled: true },\r\n  ];\r\n\r\n  selectedCity = null;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormsSelectEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<p>\r\n  By default dropdown panel is rendered as child element of ng-select, but you can append dropdown\r\n  to any element using <strong>appendTo</strong>.\r\n</p>\r\n<p>\r\n  If you place ng-select inside container with fixed height and hidden overflow then dropdown will\r\n  not be fully visible.\r\n</p>\r\n\r\n<mat-form-field>\r\n  <mat-label>Without appendTo</mat-label>\r\n  <mtx-select [items]=\"defaultBindingsList\"\r\n              [(ngModel)]=\"selectedCity\">\r\n  </mtx-select>\r\n</mat-form-field>\r\n\r\n<mat-form-field class=\"m-x-8\">\r\n  <mat-label>With appendTo</mat-label>\r\n  <mtx-select [items]=\"defaultBindingsList\"\r\n              [(ngModel)]=\"selectedCity\"\r\n              [appendTo]=\"'app-admin-layout'\">\r\n  </mtx-select>\r\n</mat-form-field>\r\n","<page-header></page-header>\r\n\r\n<div class=\"m-b-16\">\r\n  The following examples use\r\n  <a href=\"https://ng-matero.github.io/extensions/select\" target=\"_blank\">\r\n    <code>mtx-select</code></a> component of\r\n  <a href=\"https://ng-matero.github.io/extensions/\" target=\"_blank\">Material Extensions\r\n  </a>, it is a Material form field wrapper of <code>ng-select</code>.\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Data Source</mat-card-title>\r\n      <div>\r\n        <p>\r\n          Most common case is showing data from backend API and with mtx-select this is extremely\r\n          simple since you can bind directly to observable when using angular <b> | async</b> pipe.\r\n        </p>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>select person</mat-label>\r\n          <mtx-select [items]=\"(people$ | async)!\" bindLabel=\"name\" bindValue=\"id\" autofocus\r\n                      [(ngModel)]=\"selectedPersonId\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n        Selected: {{selectedPersonId}}\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <p>\r\n          You can also set array of objects as items input.\r\n        </p>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>select person</mat-label>\r\n          <mtx-select [items]=\"people\" bindLabel=\"name\" bindValue=\"id\"\r\n                      [(ngModel)]=\"selectedPersonId2\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n        Selected: {{selectedPersonId2}}\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <p>\r\n          While array of objects is the most common items source, you may want to set simple array\r\n          of strings, numbers, booleans.\r\n        </p>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>select person</mat-label>\r\n          <mtx-select [items]=\"simpleItems\" [(ngModel)]=\"selectedSimpleItem\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n        Selected: {{selectedSimpleItem | json}}\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <p>\r\n          If you have simple use case, you can omit items array and bind options directly in html\r\n          using <b>ng-option</b> component.\r\n        </p>\r\n        <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"toggleDisabled()\"\r\n                class=\"m-b-8\">\r\n          Toggle option[1] disabled\r\n        </button>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select car</mat-label>\r\n          <mtx-select [(ngModel)]=\"selectedCarId\">\r\n            <mtx-option *ngFor=\"let car of cars\" [value]=\"car.id\" [disabled]=\"car.disabled\">\r\n              {{car.name}}\r\n            </mtx-option>\r\n            <mtx-option [value]=\"'custom'\">Custom</mtx-option>\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        Selected car ID: {{selectedCarId | json}}\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Tags</mat-card-title>\r\n      <div>\r\n        <label>Default tags</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"[]\" [addTag]=\"true\" [(ngModel)]=\"selectedCompany\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        <p>\r\n          Selected value: {{selectedCompany | json}}\r\n        </p>\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <label>Custom tags</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"companies\" [addTag]=\"addTag\" [hideSelected]=\"true\" [multiple]=\"true\"\r\n                      bindLabel=\"name\" [(ngModel)]=\"selectedCompanyCustom\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        <p>\r\n          Selected value: {{selectedCompanyCustom | json}}\r\n        </p>\r\n\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <label>Server side tags</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"companies\" [addTag]=\"addTagPromise\" [multiple]=\"true\"\r\n                      bindLabel=\"name\" [loading]=\"loading\"\r\n                      [(ngModel)]=\"selectedCompanyCustomPromise\">\r\n            <ng-template ng-tag-tmp let-search=\"searchTerm\">\r\n              <b>create new</b>: {{search}}\r\n            </ng-template>\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <label>Tagging without dropdown. Press enter to add item</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"[]\" [addTag]=\"true\" [multiple]=\"true\" [selectOnTab]=\"true\"\r\n                      [isOpen]=\"false\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Select in dialog</mat-card-title>\r\n\r\n      <p>Test ng-select in a dialog.</p>\r\n      <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Open Dialog</button>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { Person, DataService } from '../data.service';\r\nimport { FormsSelectEditComponent } from './edit/edit.component';\r\n\r\n@Component({\r\n  selector: 'app-forms-selects',\r\n  templateUrl: './select.component.html',\r\n  providers: [DataService],\r\n})\r\nexport class FormsSelectComponent implements OnInit {\r\n  // Data source\r\n  people$!: Observable<Person[]>;\r\n  people: Person[] = [];\r\n  selectedPersonId = '5a15b13c36e7a7f00cf0d7cb';\r\n  selectedPersonId2 = '5a15b13c36e7a7f00cf0d7cb';\r\n\r\n  selectedSimpleItem = 'Two';\r\n  simpleItems: any[] = [];\r\n  disable = true;\r\n\r\n  selectedCarId = 3;\r\n  cars = [\r\n    { id: 1, name: 'Volvo' },\r\n    { id: 2, name: 'Saab', disabled: true },\r\n    { id: 3, name: 'Opel' },\r\n    { id: 4, name: 'Audi' },\r\n  ];\r\n\r\n  // Tags\r\n  companies: any[] = [];\r\n  loading = false;\r\n  companiesNames = ['Miškas', 'Žalias', 'Flexigen'];\r\n  selectedCompany = '';\r\n  selectedCompanyCustom = '';\r\n  selectedCompanyCustomPromise = '';\r\n\r\n  constructor(private dataService: DataService, public dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.people$ = this.dataService.getPeople();\r\n    this.dataService.getPeople().subscribe(items => (this.people = items));\r\n    this.simpleItems = [true, 'Two', 3];\r\n\r\n    this.companiesNames.forEach((c, i) => {\r\n      this.companies.push({ id: i, name: c });\r\n    });\r\n  }\r\n\r\n  toggleDisabled() {\r\n    const car: any = this.cars[1];\r\n    car.disabled = !car.disabled;\r\n  }\r\n\r\n  addTag(name: string) {\r\n    return { name, tag: true };\r\n  }\r\n\r\n  addTagPromise(name: string) {\r\n    return new Promise(resolve => {\r\n      this.loading = true;\r\n      setTimeout(() => {\r\n        resolve({ id: 5, name, valid: true });\r\n        this.loading = false;\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  openDialog() {\r\n    this.dialog.open(FormsSelectEditComponent, {\r\n      autoFocus: false,\r\n    });\r\n  }\r\n}\r\n"]}